{
  "hash": "9c7b37efc65b55446081063c3d17d255",
  "result": {
    "markdown": "\n# Gauss-Modelle\n\n\n![Bayes:Start!](img/Golem_hex.png){width=10%}\n\n\n## Lernsteuerung\n\n\n### Lernziele\n\nNach Absolvieren des jeweiligen Kapitel sollen folgende Lernziele erreicht sein.\n\nSie können …\n\n- ein Gaussmodell spezifizieren und inR berechnen\n- an Beispielen verdeutlichen, wie sich eine vage bzw. eine informationsreiche Priori-Verteilung auf die Posteriori-Verteilung auswirkt\n\n\n### Benötigte R-Pakete\n\n\n\n\n\n\nFür `rstanarm` wird ggf. [weitere Software](https://github.com/stan-dev/rstan/wiki/RStan-Getting-Started) benötigt.\n\n:::callout-note\nSoftware, und das sind R-Pakete, müssen Sie nur einmalig installieren. Aber bei jedem\nStart von R bzw. RStudio müssen Sie die (benötigten!) Pakete starten.\n:::\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(rstanarm)\nlibrary(easystats)\n```\n:::\n\n\n\n## Wie groß sind die !Kung San?\n\nDieser Abschnitt basiert auf @mcelreath_statistical_2020, Kap. 4.3.\n\n### !Kung San \n\nIn diesem Abschnitt untersuchen wir eine Forschungsfrage in Zusammenhang mit dem Volk der !Kung, s. @fig-kungs.\n\nThe ǃKung are one of the San peoples who live mostly on the western edge of the Kalahari desert, Ovamboland (northern Namibia and southern Angola), and Botswana.The names ǃKung (ǃXun) and Ju are variant words for 'people', preferred by different ǃKung groups. This band level society used traditional methods of hunting and gathering for subsistence up until the 1970s. Today, the great majority of ǃKung people live in the villages of Bantu pastoralists and European ranchers.\n\n[Quelle](https://en.wikipedia.org/wiki/%C7%83Kung_people)\n\n\n\n:::{#fig-kungs layout-ncol=2}\n\n![Kung People](img/kung.jpg){#fig-kung1}\n\n![Verbreitung der Kung-Sprachen](img/kung-lang.png){#fig-kung2}\n\nDie !Kung im südlichen Afrika\n:::\n\n\n\n[Quelle: Internet Archive Book Images, No restrictions, via Wikimedia Commons](https://upload.wikimedia.org/wikipedia/commons/b/b5/Wandering_hunters_%28Masarwa_bushmen%29%2C_North_Kalahari_Desert.jpg) \n\n\n [Quelle: By Andrewwik.0 - Own work, CC BY-SA 4.0,](https://commons.wikimedia.org/w/index.php?curid=79801340)]\n\n\n\n### !Kung Data\n\nZuerst laden wir die Daten; Quelle der Daten ist @mcelreath_statistical_2020 mit Bezug auf Howell.\n\n[Datenquelle](https://raw.githubusercontent.com/sebastiansauer/2021-wise/main/Data/Howell1a.csv)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nKung_path <-  \n  \"https://raw.githubusercontent.com/sebastiansauer/Lehre/main/data/Howell1a.csv\"  \n\nd <- data_read(Kung_path)  # aus dem Paket `easystats`\n\nhead(d)\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|  height|   weight| age| male|\n|-------:|--------:|---:|----:|\n| 151.765| 47.82561|  63|    1|\n| 139.700| 36.48581|  63|    0|\n| 136.525| 31.86484|  65|    0|\n| 156.845| 53.04191|  41|    1|\n| 145.415| 41.27687|  51|    0|\n| 163.830| 62.99259|  35|    1|\n\n</div>\n:::\n:::\n\n\n\nWir interessieren uns für die Größe der erwachsenen !Kung,\nalso filtern wir die Daten entsprechend und speichern die neue Tabelle als `d2`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd2 <- d %>% \n  filter(age >= 18)\n\nnrow(d2)\n## [1] 352\n```\n:::\n\n\n\n$N=352$.\n\nLassen wir uns einige typische deskriptive Statistiken zum Datensatz ausgeben.\n`{easystats`} macht das tatsächlich recht easy.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndescribe_distribution(d2)\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div id=\"dxwkixjmgq\" style=\"overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>html {\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\n}\n\n#dxwkixjmgq .gt_table {\n  display: table;\n  border-collapse: collapse;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#dxwkixjmgq .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#dxwkixjmgq .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#dxwkixjmgq .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 0;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#dxwkixjmgq .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#dxwkixjmgq .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#dxwkixjmgq .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#dxwkixjmgq .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#dxwkixjmgq .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#dxwkixjmgq .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#dxwkixjmgq .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#dxwkixjmgq .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#dxwkixjmgq .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#dxwkixjmgq .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#dxwkixjmgq .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#dxwkixjmgq .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#dxwkixjmgq .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#dxwkixjmgq .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#dxwkixjmgq .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#dxwkixjmgq .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#dxwkixjmgq .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#dxwkixjmgq .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#dxwkixjmgq .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#dxwkixjmgq .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#dxwkixjmgq .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#dxwkixjmgq .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#dxwkixjmgq .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#dxwkixjmgq .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#dxwkixjmgq .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-left: 4px;\n  padding-right: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#dxwkixjmgq .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#dxwkixjmgq .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#dxwkixjmgq .gt_left {\n  text-align: left;\n}\n\n#dxwkixjmgq .gt_center {\n  text-align: center;\n}\n\n#dxwkixjmgq .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#dxwkixjmgq .gt_font_normal {\n  font-weight: normal;\n}\n\n#dxwkixjmgq .gt_font_bold {\n  font-weight: bold;\n}\n\n#dxwkixjmgq .gt_font_italic {\n  font-style: italic;\n}\n\n#dxwkixjmgq .gt_super {\n  font-size: 65%;\n}\n\n#dxwkixjmgq .gt_footnote_marks {\n  font-style: italic;\n  font-weight: normal;\n  font-size: 75%;\n  vertical-align: 0.4em;\n}\n\n#dxwkixjmgq .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#dxwkixjmgq .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#dxwkixjmgq .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#dxwkixjmgq .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#dxwkixjmgq .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#dxwkixjmgq .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\">\n  \n  <thead class=\"gt_col_headings\">\n    <tr>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\">Variable</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\">Mean</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\">SD</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\">IQR</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\">Min</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\">Max</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\">Skewness</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\">Kurtosis</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\">n</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\">n_Missing</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td class=\"gt_row gt_left\">height</td>\n<td class=\"gt_row gt_right\">154.60</td>\n<td class=\"gt_row gt_right\">7.74</td>\n<td class=\"gt_row gt_right\">12.06</td>\n<td class=\"gt_row gt_right\">136.53</td>\n<td class=\"gt_row gt_right\">179.07</td>\n<td class=\"gt_row gt_right\">0.15</td>\n<td class=\"gt_row gt_right\">−0.48</td>\n<td class=\"gt_row gt_right\">352.00</td>\n<td class=\"gt_row gt_right\">0</td></tr>\n    <tr><td class=\"gt_row gt_left\">weight</td>\n<td class=\"gt_row gt_right\">44.99</td>\n<td class=\"gt_row gt_right\">6.46</td>\n<td class=\"gt_row gt_right\">9.19</td>\n<td class=\"gt_row gt_right\">31.07</td>\n<td class=\"gt_row gt_right\">62.99</td>\n<td class=\"gt_row gt_right\">0.13</td>\n<td class=\"gt_row gt_right\">−0.51</td>\n<td class=\"gt_row gt_right\">352.00</td>\n<td class=\"gt_row gt_right\">0</td></tr>\n    <tr><td class=\"gt_row gt_left\">age</td>\n<td class=\"gt_row gt_right\">41.14</td>\n<td class=\"gt_row gt_right\">15.97</td>\n<td class=\"gt_row gt_right\">23.00</td>\n<td class=\"gt_row gt_right\">18.00</td>\n<td class=\"gt_row gt_right\">88.00</td>\n<td class=\"gt_row gt_right\">0.67</td>\n<td class=\"gt_row gt_right\">−0.21</td>\n<td class=\"gt_row gt_right\">352.00</td>\n<td class=\"gt_row gt_right\">0</td></tr>\n    <tr><td class=\"gt_row gt_left\">male</td>\n<td class=\"gt_row gt_right\">0.47</td>\n<td class=\"gt_row gt_right\">0.50</td>\n<td class=\"gt_row gt_right\">1.00</td>\n<td class=\"gt_row gt_right\">0.00</td>\n<td class=\"gt_row gt_right\">1.00</td>\n<td class=\"gt_row gt_right\">0.13</td>\n<td class=\"gt_row gt_right\">−2.00</td>\n<td class=\"gt_row gt_right\">352.00</td>\n<td class=\"gt_row gt_right\">0</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n:::\n:::\n\n\n\n\n### Wir gehen apriori von normalverteilter Größe Der !Kung aus\n\n*Forschungsfrage:* Wie groß sind die erwachsenen !Kung im *Durchschnitt*?\n\n\nWir interessieren uns also für den Mittelwert der Körpergröße (erwachsener Kung beider Geschlechter), $\\mu$.\n\n\n\n![Mensch](img/human.png){width=5%}\n\n\n[Quelle: Own alterations andFile:SVG_Human_With_All_Organs.svg by Madhero88, CC BY-SA, via Wikimedia Commons 3.0](https://creativecommons.org/licenses/by-sa/3.0)\n\n\nWir sind uns über diesen Mittelwert nicht sicher^[Darum machen wir hier ja die ganz Show!], und unsere Ungewissheit quantifizieren wir anhand einer Normalverteilung mit Mittelwert von 178cm und Streuung von 20 cm:\n\n$$\\mu \\sim \\mathcal{N}(178, 20)$$\n\n\nWarum 178 cm? Kein besonderer Grund. Hier wollen wir den Effekt verschiedener Priori-Werte untersuchen.^[Der Autor des zugrundeliegenden Fachbuchs, Richard McElreath gibt 178cm als seine Körpergröße an.]\nIn einer echten Untersuchung sollte man immer einen inhaltlichen Grund für einen Priori-Wert haben.\n*Oder* man wählt \"schwach informative\" Prioris, wie das `{rstanarm}` tut:\nDamit lässt man kaum Vorab-Information in das Modell einfließen,\naber man verhindert extreme Prioris, die meistens unsinnig sind (so wie eine SD von 100 Metern in diesem Fall).\n\n\n:::callout-note\nWir haben zwar vorab nicht viel Wissen, aber auch nicht gar keines: Eine Gleichverteilung der Körpergrößen kommt nicht in Frage und ein vages Wissen zum Mittelwert haben wir auch. Darüber hinaus ist eine Normalverteilung nicht unplausibel.\n:::\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n## Die Exponentialverteilung\n\n### Die Apfel-fällt-nicht-weit-vom-Stamm-Verteilung\n\nDarf ich vorstellen ...\n\n\nBevor wir unser Kung-Modell spezifizieren können,\nsollten wir noch überlegen, welches Vorab-Wissen wir zur Streuung um den Mittelwert herum haben.\nDa wir uns nicht 100% sicher zur gesuchten Größe sind,\nmüssen wir angeben, wie groß die Streuung um den Mittelwert sein soll.\nHier werden wir eingestehen, dass wir uns auch nicht 100% sicher sind,\nwie groß die Streuung exakt ist.\nAlso geben wir eine Verteilung für die Streuung an.\n\nEtwas Wissen über diese Verteilung haben wir:\n\n- Eine Streuung muss positiv sein (es gibt keine negative Streuung).\n- Eine Gleichverteilung der Streuung ist vielleicht möglich, aber nicht sehr plausibel.\n- Wenn wir der Meinung sind, der Mittelwert betrage \"ungefähr 178cm\", so halten wir 180cm für plausibel, aber 18000 cm für unmöglich und schon 200 für sehr unplausibel. Also: Je größer die die Abweichung vom Mittelwert desto unplausibler.\n\nDiese Anforderungen^[\"Desiderata\"] spiegeln sich in @fig-exp wider.\nAußerdem zeigt die Abbilung verschiedene Quantile, wie das 95%-Quantil,\ndas bei 3 liegt;\n95% der Werte dieser Verteilung sind also nicht größer als 3.\n\n\n\n\n\n\n\n::: {.cell fig.asp='0.5'}\n\n```{.r .cell-code}\nd <-\n  tibble(\n    x = seq(0, 5,.1),\n    y = dexp(x, rate = 1)\n  )\n\n\nd_qs <-\n  tibble(\n    prob = c(0.05, .25, .50, .75, .95),\n    q = qexp(prob) \n  )\n\nd %>% \n  ggplot(aes(x,y)) +\n  geom_line() +\n  geom_area(fill = \"grey60\") +\n  geom_vline(data = d_qs,\n             aes(xintercept = q)) +\n  geom_label(data = d_qs,\n             aes(x = q, \n                 label = prob,\n                 y = prob)) +\n  labs(\n       caption = \"Vertikale Striche zeigen die Quantile für 5%, 25%, 50%, 75%, 95%\",\n       y = \"Dichte\")\n```\n\n::: {.cell-output-display}\n![Die Exponentialverteilung mit einigen ihrer Quantilen](gauss_files/figure-html/fig-exp-1.png){#fig-exp width=672}\n:::\n:::\n\n\nFür eine exponentialverteilte Variable $X$ schreibt man auch:\n\n\n$$X \\sim \\operatorname{Exp}(1)$$\n\n\nEine Verteilung dieser Form nennt man *Exponentialverteilung*.\n\n\n\n\n- Eine *Exp*onentialverteilung ist nur für positive Werte, $x>0$, definiert.\n- Steigt X um eine *Einheit*, so ändert sich Y um einen *konstanten Faktor*.\n- Sie hat nur einen Parameter, genannt *Rate* oder $\\lambda$ (\"lambda\").\n- $\\frac{1}{\\lambda}$  gibt gleichzeitig Mittelwert und Streuung (\"Gestrecktheit\") der Verteilung an.\n- Je größer die Rate $\\lambda$, desto *kleiner* die Streuung und der Mittelwert der Verteilung.\n- Je größer  $1/\\lambda$, desto *größer* die Streuung und der Mittelwert der Verteilung.\n\n\n\nOhne auf die mathematischen Eigenschaften im Detail einzugehen,\nhalten wir fest, dass der Graph dieser Funktion gut zu unseren Plänen passt.\n\n\n\n### Visualisierung verschiedener Exponentialverteilungen\n\nSchauen wir uns einige Beispiele von Exponentialverteilungen an.\nUnterschiede in Exponentialverteilungen sind rein auf Unterschiede in $\\lambda$ (lambda) zurückzuführen, s. @fig-exps.\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![Beispiele von Expnentialverteilungen mit unterschiedlichem lambda](gauss_files/figure-html/fig-exps-1.png){#fig-exps width=672}\n:::\n:::\n\n\n\nWie wir in @fig-exps sehen, könnte eine Exponentialverteilung mit $\\lambda=1/8$ grob passen.\n\n:::callout-note\nDie \"richtigen\" Priori-Verteilung zu finden, bzw. die richtigen Parameter für die Priori-Verteilung zu wählen, ist nicht möglichn, denn es gibt nicht die eine, richtige Priori-Verteilung.\nEine \"gut passende\" Verteilung zu finden, ist häufig nicht leicht.\nGut beraten ist man mit der Regel, im Zweifel lieber eine liberale Verteilung zu wählen,\ndie einen breiteren Raum an möglichen Werten zulässt. \nAllerdings sollte man nicht das Baby mit dem Wasser auskippen und extreme Werte, wie mehrere Meter Körpergröße Streuung, erlauben.\n:::\n\nMan kann sich die Quantile der Exponentialverteilung mit `qexp` ausgeben lassen,\nwobei mit man `p` den Wert der Verteilungsfunktion angibt,\nfür den man das Quantil haben möchte. Mit `rate` wird $\\lambda$ bezeichnet.\n\nDieser Aufruf zum Beispiel:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nqexp(p = .5, rate = 1/8)\n## [1] 5.545177\n```\n:::\n\n\nGibt uns die Verteilungsfunktion einer Exponentialverteilung mit Rate ($\\lambda$) von 1/8 zurück, ca. 5.5.\n\nDie Grenzen der inneren 95% dieser Verteilung kann man sich so ausgeben lassen:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nqexp(p = c(0.025, .975), rate = 1/8)\n## [1]  0.2025425 29.5110356\n```\n:::\n\n\nDiese Grenzen scheinen hinreichend weit, das wir noch von den Daten überrascht werden können, aber schmal genug, um unsinnige Werte auszuschließen.\nEin guter Start! Weiter geht's!\n\n\n\n\n\n## Unser Gauss-Modell der !Kung\n\n\n### Modelldefinition\n\nWir nehmen an, dass $\\mu$ und $h_i$ normalverteilt sind und $\\sigma$ exponentialverteilt (da notwendig positiv) ist:\n\n\n\nLikelihood: $h_i \\sim \\mathcal{N}(\\mu, \\sigma)$\n\nPrior für $\\mu$: $\\mu \\sim \\mathcal{N}(178, 20)$\n\nPrior für $\\sigma$: $\\sigma \\sim \\mathcal{E}(0, 0.1)$\n\nDaher: $95\\%KI( \\mu): 178 \\pm 40$\n\n\nIn @fig-kung-model1 sind unsere Priori-Verteilungen visualisiert.\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![Unser (erstes) Kung-Modell](gauss_files/figure-html/fig-kung-model1-1.png){#fig-kung-model1 width=672}\n:::\n:::\n\n\n\n\n\n### Priori gewichtet mit Likelihood ergibt Posteriori\n\n\nZu Erinnerung: Die Posteriori-Wahrscheinlichkeit ist das Ergebnis von Priori-Wahrscheinlichkeit und Likelihood.\n\n\n\n\nDie *Körpergrößen der einzelnen Personen* $h_i$ nehmen wir als normalverteilt an mit Mittelwert $\\mu$ und Streuung $\\sigma$:\n\n$$h_i \\sim \\mathcal{N}(\\color{blue}{\\mu},\\color{green}{\\sigma})$$\n\n\n### Prioris\n\nMittelwert der Größe ist normalverteilt mit $\\mu=178$ und $\\sigma=20$:\n\n$$\\color{blue}{\\mu \\sim \\mathcal{N}(178, 20)}$$\n\nDie Streuung $\\sigma$ der Größen ist exponentialverteil mit $\\lambda = 1/8$.\n\n$$\\color{green}{\\sigma \\sim \\mathcal{E}(1/8)}$$\n\n### Fertig!\n\nJetzt haben wir unser Modell definiert!\n\nWeil es so schön ist, schreiben wir es hier noch einmal auf, @eq-mod-kung1.\n\n\n\n\n\n$$\n\\begin{aligned}\nh_i &\\sim \\mathcal{N}(\\mu, \\sigma) \\\\\n\\mu &\\sim \\mathcal{N}(178, 20) \\\\\n\\sigma &\\sim \\mathcal{E}(1/8)\n\\end{aligned}\n$${#eq-mod-kung1}\n\nZur Berechnung nutzen wir jetzt dieses Mal aber *nicht* die Gittermethode (Bayes-Box),\nsondern lassen R die Arbeit verrichten.\n\nDa gibt es einen neuen Golem, ziemlich kräftig der Bursche,\nder soll die Arbeit für uns tun.\nDer Golem hört auf den Namen `rstanarm`^[Hey, *ich* habe ihn diesne Namen nicht gegeben.].\n\n\n\n## Zufällige Motivationsseite\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](img/pretty_good.gif)\n:::\n:::\n\n\n\n\n\n## Posteriori-Verteilung des Größen-Modells, `m41`\n\n\nOkay, Golem, an die Arbeit!\nBerechne uns das Kung-Modell!\nNennen wir das Modell `m41`^[*m* wie Modell und 4, weil das Modell in Kapitel 4 von @mcelreath_statistical_2020 in ähnlicher Form berichtet wird, und 1 weil es unsere erste Variante dieses Modells ist.].\n\n\n::: {.cell}\n\n```{.r .cell-code}\nm41 <- stan_glm(height ~ 1, data = d2, refresh = 0)\nm41_post <- as_tibble(m41)  # Modellergebnis in Tabelle umwandeln\nnames(m41_post) <- c(\"mu\", \"sigma\")  # schönere Namen für die Spalten\n```\n:::\n\n\n\nDas Argument `refresh = 0` verhindert, dass die Details zum Ziehen der Stichproben am Bildschirm ausgegeben werden.\nIch finde diese Ausgabe meist nicht informativ,\nso dass ich sie lieber unterdrücke.\n\n\n`stan_glm` ist eine Funktion, mit der man Regressionsmodelle berechnen kann.\nNun haben wir in diesem Fall kein \"richtiges\" Regressionsmodell.\nMan könnte sagen, wir haben eine AV (Körpergröße), aber keine UV (keine Prädiktoren).\nGlücklicherweise können wir auch solche \"armen\" Regressionsmodelle formulieren:\n\n`av ~ 1` bzw. in unserem Beispiel `height ~ 1` bedeutet,\ndass man nur die Verteilung der AV berechnen möchte, \naber keine Prädiktoren hat (das soll die  `1` symbolisieren).\n\n\nFür das Modell `m41` haben wir *keine* Prioris spezifiziert.\nWir greifen damit auf die Voreinstellung der Prioris von `rstanarm` zurück.\nDas ist ok, aber wenn Sie Vorab-Wissen haben,\nsollten Sie das an `rstanarm` weitergeben, weil es ja schade wäre,\nwenn Sie Wissen haben, das von Ihrem Modell nicht genutzt wird.\n\nPlotten wir mal die Posteriori-Verteilung von `m41`, s. @fig-kung2.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nm41_post %>% \n  ggplot() +\n  aes(x = mu, y = sigma) %>% \n  geom_hex() +\n  scale_fill_viridis_c() \n```\n\n::: {.cell-output-display}\n![](gauss_files/figure-html/echo- true label- fig-kung2 fig-cap- Die gemeinsame Verteilung von Mittelwert und Streuung.-1.png){width=672}\n:::\n:::\n\n\nDa das Modell *zwei* Parameter hat, können wir auch beide gleichzeitig plotten.\nWie man sieht, sind die beiden Parameter unkorreliert.\nIn anderen Modellen können die Parameter korreliert sein.\n\n@fig-kung2 erlaubt uns, für jede Kombination von Mittelwert und Streuung zu fragen,\nwie wahrscheinlich diese Kombination ist.\n\n\n\nHier noch eine andere Visualisierung:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# echo: false\np_m41_post <- \n  m41_post %>% \n  ggplot() +\n  aes(x = mu, y = sigma) +\n  geom_point(alpha = .1) \n\nggExtra::ggMarginal(p_m41_post, type = \"density\")\n```\n\n::: {.cell-output-display}\n![](gauss_files/figure-html/Kung-5-bis-1.png){width=672}\n:::\n:::\n\n\n\nNatürlich können wir auch nur einen Parameter plotten:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nm41_post %>% \n  ggplot(aes(x = mu)) + \n  geom_histogram()\n```\n\n::: {.cell-output-display}\n![](gauss_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n\nFassen wir die Ergebnisse dieses Modells zusammen:\n\n\n- Wir bekommen eine Wahrscheinlichkeitsverteilung für $\\mu$ und eine für $\\sigma$ (bzw. eine zweidimensionale Verteilung, für die $\\mu,\\sigma$-Paare).\n\n- Trotz des eher vagen Priors ist die Streuung Posteriori-Werte für $\\mu$ und $\\sigma$ klein: Die große Stichprobe hat die Priori-Werte überstimmt.\n\n- Ziehen wir Stichproben aus der Posteriori-Verteilung, so können wir interessante Fragen stellen. \n\n\n\n\n### Hallo, Posteriori-Verteilung\n\n... wir hätten da mal ein paar Fragen an Sie. 🕵\n\n\n1. Mit welcher Wahrscheinlichkeit ist die *mittlere* !Kung-Person größer als 1,55m?\n2. Welche mittlere Körpergröße wird mit 95% Wahrscheinlichkeit nicht überschritten, laut dem Modell?\n3. In welchem 90%-PI liegt $\\mu$ vermutlich?\n4. Mit welcher Unsicherheit ist die Schätzung der mittleren Körpergröße behaftet?\n5. Was ist der mediane Schätzwert der mittleren Körpergröße, sozusagen der \"Best Guess\"?\n\n\nAntworten folgen etwas weiter unten.\n\n\n\n\n\nAbschließend, eigentlich nur Spielerei, noch eine andere Visualisierung der Post-Verteilung von $\\mu$ und von $\\sigma$, @fig-kung3.\n\n\n::: {.cell fig.asp='1'}\n::: {.cell-output-display}\n![Die beiden Randverteilungen der Post-Verteilungen, d.h. die Verteilungen für mu und für sigma](gauss_files/figure-html/fig-kung3-1.png){#fig-kung3 width=672}\n:::\n:::\n\n\n\n\n\n### Posteriori-Stichproben mit `stan_glm()` berechnen \n\nMit `stan_glm()` können wir komfortabel die Posteriori-Verteilung berechnen. \nDie Gittermethode wird nicht verwendet, aber die Ergebnisse sind - in bestimmten Situationen - ähnlich.\nEs werden aber auch viele Stichproben simuliert (sog. MCMC-Methode).\nGibt man keine Priori-Werte an, so greift die Funktion auf Standardwerte zurück.\n\n\nGrob gesagt berechnen wir die Post-Verteilung mit `stan_glm` so:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(rstanarm)  # Paket muss gestartet sein.\n\n# berechnet Post.-Vert.:\nstan_glm(\n  # modelldefinition:\n  AV ~ UV,\n  # Datensatz:\n  data = meine_daten\n)\n```\n:::\n\n\n\n\nModelldefinition:\n\n$h_i \\sim \\mathcal{N}(\\mu, \\sigma)$, Likelihood\n\n$\\mu \\sim \\mathcal{N}(155, 19)$, Prior zum Größenmittelwert\n\n$\\sigma \\sim \\mathcal{E}(0.125)$, Prior zur Streuung der Größen\n\n\n\n\n\n### Ausgabe von `stan_glm()`\n\nWir können, wie wir es oben getan haben, uns die Stichproben der Post-Verteilung ausgeben lassen, und diese z.B. plotten.\n\nWir können es aber auch komfortabler haben ... \nMit dem Befehl `parameters` kann man sich die geschätzten Parameterwerte einfach ausgeben lassen.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nm41 <- stan_glm(height ~ 1, data = d2, refresh = 0)  # aus Paket rstanarm\n\nparameters(m41)  # aus Paket `easystats`\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\nTable: Fixed effects\n\n|Parameter   | Median |           95% CI |   pd |  Rhat |     ESS |                    Prior |\n|:-----------|:------:|:----------------:|:----:|:-----:|:-------:|:------------------------:|\n|(Intercept) | 154.59 | (153.79, 155.40) | 100% | 1.000 | 2918.00 | Normal (154.60 +- 19.36) |\n:::\n:::\n\n\n\nDas Wesentliche: Unser Golem schätzt den Größenmittelwert der Kung auf ca. 155cm bzw. auf einen Bereich von etwa 153.7924926 bis 155.4036398 schätzt.\n\nInformativ ist vielleicht noch, dass wir den Prior erfahren, der im Modell verwendet wurde. \nDazu später mehr.\n\n\nIn dieser Ausgabe sind ein paar Angaben, die wir nicht verstehen, wie `pd`, `Rhat` und `ESS`. Kein Problem: Einfach ignorieren :-)\n\nWer Näheres wissen will, findet [hier]() einen Anfang. Außerdem sei an @mcelreath_statistical_2020 und @gelman_regression_2021 verwiesen.\n\n## Wie tickt `stan_glm()`?\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](img/stanlogo.png){width=10%}\n:::\n:::\n\n\n[Quelle](https://mc-stan.org/)\n\nHier ein paar Kernimnfos zu `stan_glm`: \n\n- *Stan* ist eine Software zur Berechnung von Bayesmodellen; das Paket `rstanarm` stellt Stan für uns bereit.\n- `stan_glm()` ist für die Berechnung von Regressionsmodellen ausgelegt.\n- Will man nur die Verteilung einer Variablen (wie `heights`) schätzen, so hat man man ... eine Regression ohne Prädiktor.\n- Eine Regression ohne Prädiktor schreibt man auf Errisch so: `y ~ 1`. Die `1` steht also für die nicht vorhandene UV; `y` meint die AV (`height`).\n- `(Intercept)` (Achsenabschnitt) gibt den Mittelwert an.\n\n\n\nMehr findet sich in der [Dokumentation von RstanArm](https://mc-stan.org/rstanarm/).\n\n\n### Schätzwerte zu den Modellparameter\n\nDie Parameter eines Modells sind die Größen, für die wir eine Priori-Verteilung annehmen sowie einen Likelihood und dann aus den Daten schätzen.\nIch sage schätzen um hervorzuheben, dass wir die wahren Werte nicht kennen,\nsondern nur eine Vermutung haben, \nunsere Ungewissheit vorab also (wie immer) in der Priori-Verteilung festnageln\nund unsere Ungewissheit nach Kenntnis der Daten in der Posteriori-Verteilung quantifizieren.\n\nWie gerade gesehen,\nlassen sich die Modellparameter (bzw. genauer gesagt deren Schätzungen) einfach mit `parameters(modellname)` auslesen.\n\n\n\n\n### Stichproben aus der Posteriori-Verteilung ziehen\n\nWie wir es vom Globusversuch gewohnt sind,\nkönnen wir aber auch Stichproben aus der Post-Verteilung ziehen.\n\nHier die ersten paar Zeilen von `post_m41`:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npost_m41 <- as_tibble(m41)\nhead(post_m41)\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n| (Intercept)|    sigma|\n|-----------:|--------:|\n|    154.7852| 8.090652|\n|    154.1755| 7.444566|\n|    154.5270| 7.853943|\n|    154.7777| 7.607341|\n|    153.6430| 7.883094|\n|    154.3836| 8.135546|\n\n</div>\n:::\n:::\n\n\nIn einer Regression ohne Prädiktoren entspricht der Achsenabschnitt dem Mittelwert der AV,\ndaher gibt uns die Spalte `(Intercept)` Aufschluss über unsere Schätzwerte zu $\\mu$ (der Körpergröße).\n\n\n:::{#exm-kung1}\n\n## Mit welcher Wahrscheinlichkeit ist $\\mu>155$? \n\n\n::: {.cell}\n\n```{.r .cell-code}\nnames(post_m41) <- \n  c(\"mu\", \"sigma\")  # den Namen \"(Intercept)\" durch \"mu\" ersetzen, ist prägnanter\n\npost_m41 %>% \n  count(mu > 155) %>% \n  mutate(prop = n/sum(n))\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|mu > 155 |    n|   prop|\n|:--------|----:|------:|\n|FALSE    | 3330| 0.8325|\n|TRUE     |  670| 0.1675|\n\n</div>\n:::\n:::\n\n\nDie Wahrscheinlichkeit ist nicht hoch, aber nicht auszuschließen,\ndass die Kung im Schnitt größer als 155 cm sind.\nWahrscheinlicher ist jedoch, dass sie kleiner als 155 cm sind.\n\n:::\n\n\n:::{#exm-kung2}\n\n## Mit welcher Wahrscheinlichkeit ist $\\mu>165$? \n\n\n::: {.cell}\n\n```{.r .cell-code}\nnames(post_m41) <- \n  c(\"mu\", \"sigma\")  # den Namen \"(Intercept)\" durch \"mu\" ersetzen, ist prägnanter\n\npost_m41 %>% \n  count(mu > 165) %>% \n  mutate(prop = n/sum(n))\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|mu > 165 |    n| prop|\n|:--------|----:|----:|\n|FALSE    | 4000|    1|\n\n</div>\n:::\n:::\n\n\nOh, diese Hypothese können wir mit an Sicherheit grenzender Wahrscheinlichkeit ausschließen.\nAber Achtung: Das war eine Kleine-Welt-Aussage! \nDie Wahrscheinlichkeit, die Hypothese $\\mu > 165$ auszuschließen ist *nur* dann hoch,\nwenn das Modell gilt!\nWenn also der Golem keinen Mist gebaut hat. \nUnd sind wir mal ehrlich, der Golem tut, was sein:e Herr:in und Meister:in ihm befiehlt.\nLetztlich liegt es an uns, den Golem auf Spur zu kriegen.\n\n:::\n\n:::{#exm-kung3}\n\n## Welche mittlere Körpergröße wird mit 95% Wahrscheinlichkeit nicht überschritten, laut dem Modell `m41`?\n\n\n::: {.cell}\n\n```{.r .cell-code}\npost_m41 %>% \n  summarise(q95 = quantile(mu, .95))\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|      q95|\n|--------:|\n| 155.2674|\n\n</div>\n:::\n:::\n\n\n:::\n\n\n\n:::{#exm-kung4}\n\n## In welchem 90%-PI liegt $\\mu$ vermutlich?\n\n\n::: {.cell}\n\n```{.r .cell-code}\npost_m41 %>% \n  eti()\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|Parameter |   CI|     CI_low|    CI_high|\n|:---------|----:|----------:|----------:|\n|mu        | 0.95| 153.792493| 155.403640|\n|sigma     | 0.95|   7.208212|   8.364078|\n\n</div>\n:::\n:::\n\n\n\nEin ETI ist synonym zu PI.\n\n:::\n\n:::{#exm-kung5}\n\n## Mit welcher Unsicherheit ist die Schätzung der mittleren Körpergröße behaftet?\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nm41 %>% \n  parameters()\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|Parameter   |   Median|   CI|   CI_low|  CI_high| pd|      Rhat|      ESS|Prior_Distribution | Prior_Location| Prior_Scale|\n|:-----------|--------:|----:|--------:|--------:|--:|---------:|--------:|:------------------|--------------:|-----------:|\n|(Intercept) | 154.5905| 0.95| 153.7925| 155.4036|  1| 0.9996089| 2917.832|normal             |       154.5971|    19.35583|\n\n</div>\n:::\n:::\n\n\n\n\n\nSeeing is believing:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nm41 %>% \n  parameters() %>% \n  plot(show_intercept = TRUE)\n```\n\n::: {.cell-output-display}\n![](gauss_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\nDas Modell ist sich recht sicher: die Ungewissheit der mittleren Körpergröße liegt bei nicht viel mehr als einem Zentimeter (95%-CI).\n\n:::\n\n\n:::{#exm-kung6}\n\n\n## Was ist der mediane Schätzwert der mittleren Körpergröße, sozusagen der \"Best Guess\"?\n\n\n`parameters(m41)` hat uns die Antwort schon gegeben: Ca. 155 cm.\n\n:::\n\n\n\n\n🏋️ Ähnliche Fragen bleiben als Übung für die Lesis 🤓.\n\n\n\n### Standard-Prioriwerte bei `stan_glm()`\n\n`stan_glm()` nimmt für uns Priori-Wert an.\nWelche das sind, kann man sich so anzeigen lassen:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprior_summary(m41)\n## Priors for model 'm41' \n## ------\n## Intercept (after predictors centered)\n##   Specified prior:\n##     ~ normal(location = 155, scale = 2.5)\n##   Adjusted prior:\n##     ~ normal(location = 155, scale = 19)\n## \n## Auxiliary (sigma)\n##   Specified prior:\n##     ~ exponential(rate = 1)\n##   Adjusted prior:\n##     ~ exponential(rate = 0.13)\n## ------\n## See help('prior_summary.stanreg') for more details\n```\n:::\n\n\n\n\n\n\n`stan_glm()` verwendet (in der Voreinstellung) *schwach informative* Priori-Werte, die nur wenig Vorabwissen in das Modell geben.\nEs werden dafür die Stichproben-Daten als Priori-Daten verwendet: Mittelwerte und Streuungen der AV werden als Grundlage für die Priori-Verteilungen herangezogen.\nStrenggenommen ist das nicht \"pures Bayes\",\nweil die Priori-Werte ja *vorab*, also vor Kenntnis der Daten bestimmt werden sollen.\nBitte reichen Sie Ihre Beschwerden bei Andrew Gelman ein.\n\nMan sollte diese Standardwerte als Minimalvorschlag sehen. Kennt man sich im Sachgebiet aus, kann man meist bessere Prioris finden.\nDie Voreinstellung ist nicht zwingend; andere Werte wären auch denkbar.\n\n\n- `Intercept`: $\\mu$, der Mittelwert der Verteilung $Y$\n    - $\\mu \\sim \\mathcal{N}(\\bar{Y}, sd(Y)\\cdot 2.5)$\n    - als Streuung von $\\mu$ wird die 2.5-fache Streuung der Stichprobe (für $Y$) angenommen.\n\n- `Auxiliary (sigma)`: $\\sigma$, die Streuung der Verteilung $Y$\n    - $\\sigma \\sim \\mathcal{E}(\\lambda=1/sd(Y))$\n    - als \"Streuung\", d.h. $\\lambda$ von $h_i$ wird $\\frac{1}{sd(Y)}$ angenommen.\n    \n    \n\n\n\nEine sinnvolle Strategie ist, einen Prior so zu wählen, dass man nicht übergewiss ist,\nalso nicht zu sicher Dinge behauptet, die dann vielleicht doch passieren (also die Ungewissheit zu gering spezifiziert),\nandererseits sollte man extreme, unplausible Werte ausschließen.\n\n\n\n\n:::callout-important\nBei der Wahl der Prioris gibt es nicht die eine, richtige Wahl.\nDie beste Entscheidung ist auf transparente Art den Stand der Forschung einfließen zu lassen und eigene Entscheidungen zu begründen. Häufig sind mehrere Entscheidungen möglich.\nMöchte man lieber vorsichtig sein, weil man wenig über den Gegenstand weiß,\ndann könnte man z.B. auf die Voreinstellung von `rstanarm` vertrauen,\ndie \"schwachinformativ\" ist, also nur wenig Priori-Information  ind das Modell einfließen lässt.\n:::\n\n\n\n\n## Modell `m42`: unsere Priori-Werte \n\nIm Modell `m41` haben wir auf die Priori-Werte der Voreinstellung von `rstanarm` vertraut.\nJetzt lassen wir mal unsere eigenen Priori-Werte einfließen, in unserem zweiten Kung-Modell, `m42`.\n\n\n\n\n\n### m42\n\nDann lassen wir `stan_glm()` unser zweites Modell berechnen.\nDieses Mal geben wir die Priori-Werte explizit an.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nm42 <- \n  stan_glm(height ~ 1, \n           prior_intercept = normal(178, 20),  # mu\n           prior_aux = exponential(0.125),  # sigma\n           refresh = FALSE,  # bitte nicht so viel Ausgabe drucken\n           data = d2)\nparameters(m42)\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|Parameter   |   Median|   CI|   CI_low|  CI_high| pd|     Rhat|      ESS|Prior_Distribution | Prior_Location| Prior_Scale|\n|:-----------|--------:|----:|--------:|--------:|--:|--------:|--------:|:------------------|--------------:|-----------:|\n|(Intercept) | 154.5881| 0.95| 153.7812| 155.4234|  1| 1.001437| 2628.788|normal             |            178|          20|\n\n</div>\n:::\n:::\n\n\n\nWir haben noch nicht alle Informationen kennengelernt, die hier ausgegeben werden.\nIm Zweifel: Einfach ignorieren. Wichtige Fähigkeit im Studium 🤓.\n\n\n:::callout-important\nVergleichen Sie die Parameterwerte von `m41` und `m42`! Was fällt Ihnen auf? Nichts?\nGut! Tatsächlich liefern beide Modelle sehr ähnliche Parameterwerte.\nDie Prioriwerte waren nicht so wichtig, weil wir genug Daten haben.\nHat man einigermaßen viele Daten, so fallen Prioriwerte nicht mehr ins Gewicht,\nzumindest wenn sie moderat gewählt waren.\n:::\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n### Posteriori-Verteilung und Parameter plotten\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nm42 %>% \n  as_tibble() %>% \n  ggplot(aes(x = `(Intercept)`)) +\n  geom_histogram()\n```\n\n::: {.cell-output-display}\n![](gauss_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n\nEin Vergleich mehrerer Priori-Werte wäre auch nützlich, um ein skeptisches Publikum von der Wahl (bzw. der Indifferenz) der gewählten Priori-Werte zu überzeugen.\n\n\n\n## Fazit\n\nWir haben die Posteriori-Verteilung für ein Gauss-Modell  berechnet.\nDabei hatten wir ein einfaches Modell mit metrischer Zielvariablen, ohne Prädiktoren, betrachtet.\nDie Zielvariable, Körpergröße (`height`), haben wir als normalverteilt mit den Parametern $\\mu$ und $\\sigma$ angenommen.\nFür $\\mu$ und $\\sigma$ haben wir jeweils keinen einzelnen (fixen) Wert angenommen, sondern eine Wahrscheinlichkeitsverteilung, der mit der Priori-Verteilung für $\\mu$ bzw. $\\sigma$ festgelegt ist.\n\n\n\n\n\n\n\n![🧡 Bleiben Sie dran!](img/chicken_standard_deviation.jpg)\n\n\n\n\n\n\n\n\n## Wahl der Priori-Werte\n\n\n🏎️ Dieser Abschnitt ist eine VERTIEFUNG und nicht prüfungsrelevant. 🏎\n\n\n\n\n### Welche Beobachtungen sind auf Basis unseres Modells zu erwarten?\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nn <- 1e4\n\nsim <- tibble(sample_mu  = \n      rnorm(n, \n            mean = 178, \n            sd   = 20),\n    sample_sigma = \n      rexp(n, \n            rate = 0.1)) %>% \n  mutate(height  = \n      rnorm(n, \n            mean = sample_mu, \n            sd   = sample_sigma))\n\nheight_sim_sd <- \n  sd(sim$height) %>% round()\nheight_sim_mean <- \n  mean(sim$height) %>% round()\n```\n:::\n\n\n\n💭 Was denkt der Golem (`m41`) *apriori* von der Größe der !Kung?\n\n🦾 Ziehen wir mal ein paar Stichproben auf Basis des Modells. Voilà:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np3 <- \n  sim %>% \n  ggplot(aes(x = height)) +\n  geom_density(fill = \"grey33\") +\n  scale_x_continuous(breaks = c(0, 178-3*height_sim_sd, 178, 178+3*height_sim_sd)) +\n  scale_y_continuous(NULL, breaks = NULL) +\n  labs(title = \"height ~ dnorm(mu, sigma)\",\n       caption = \"X-Achse zeigt MW±3SD\",\n       x = \"Größe\") +\n  theme(panel.grid = element_blank()) \n\np3\n```\n\n::: {.cell-output-display}\n![](gauss_files/figure-html/Kung-12-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n[Quellcode](https://bookdown.org/content/4857/geocentric-models.html#a-gaussian-model-of-height)\n\n\n### Priori-Werte prüfen mit der Priori-Prädiktiv-Verteilung\n\n- Die Priori-Prädiktiv-Verteilung (`sim`) simuliert Beobachtungen (nur) auf Basis der Priori-Annahmen: \n$h_i \\sim \\mathcal{N}(\\mu, \\sigma),$\n$\\mu \\sim \\mathcal{N}(178, 20),$\n$\\sigma \\sim \\mathcal{E}(0.1)$\n- So können wir prüfen, ob die Priori-Werte vernünftig sind.\n\n\nDie Priori-Prädiktiv-Verteilung zeigt, dass unsere Priori-Werte ziemlich vage sind, also einen zu breiten Bereich an Größenwerten zulassen:\n\n\n::: {.cell}\n\n```{.r .cell-code}\np3\n```\n\n::: {.cell-output-display}\n![](gauss_files/figure-html/Kung-13-1.png){width=672}\n:::\n:::\n\n\n\n\nAnteil $h_i > 200$:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nanteil_großer_kung <- \nsim %>% \n  count( height > 200) %>% \n  mutate(prop = n/sum(n))\nanteil_großer_kung\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|height > 200 |    n|   prop|\n|:------------|----:|------:|\n|FALSE        | 8331| 0.8331|\n|TRUE         | 1669| 0.1669|\n\n</div>\n:::\n:::\n\n\n\n🤔 Sehr große Buschleute? 17 Prozent sind größer als 2 Meter. Das ist diskutabel, muss aber nicht zwangsläufig ein schlechter Prior sein.\n\n\n\n\n\n\n###  Vorhersagen der Priori-Werte\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](gauss_files/figure-html/Kung-15-1.png){width=672}\n:::\n:::\n\n\n\n\n\n### Extrem vage Priori-Verteilung für die Streuung?\n\n\n$$\\sigma \\sim \\mathcal{E}(\\lambda=0.01)$$\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# simulate\nset.seed(4)\n\nsim2 <-\n  tibble(sample_mu    = rnorm(n, mean = 178, sd = 100),\n         sample_sigma = rexp(n, rate = .01)) %>% \n  mutate(height = rnorm(n, mean = sample_mu, sd = sample_sigma))\n\n# compute the values we'll use to break on our x axis\nbreaks <-\n  c(mean(sim2$height) - 3 * sd(sim2$height), 0, mean(sim2$height), mean(sim2$height) + 3 * sd(sim2$height)) %>% \n    round(digits = 0)\n\n# this is just for aesthetics\ntext <-\n  tibble(height = 272 - 25,\n         y      = .0013,\n         label  = \"größter Mann\",\n         angle  = 90)\n\n# plot\np4 <-\n  sim2 %>% \n  ggplot(aes(x = height)) +\n  geom_density(fill = \"black\") +\n  geom_vline(xintercept = 0, color = \"grey92\") +\n  geom_vline(xintercept = 272, color = \"grey92\", linetype = 3) +\n  geom_text(data = text,\n            aes(y = y, label = label, angle = angle),\n            color = \"grey92\") +\n  scale_x_continuous(breaks = breaks, \n                     limits = c(-400, 700)) +\n  scale_y_continuous(NULL, breaks = NULL) +\n  labs(title = \"height ~ dnorm(mu, sigma)\\nmu ~ dnorm(178, 100)\\nsigma ~ E(0.01)\",\n       x = \"Größe\",\n       caption = \"X-Achse zeigt MW±3SD\") +\n  theme(panel.grid = element_blank()) \n\np4\n```\n\n::: {.cell-output-display}\n![](gauss_files/figure-html/Kung-16-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\nDie Streuung der Größen ist weit:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd <- \n  tibble(x = seq(0,75, by =.01),\n         y = dexp(x, rate = .01))\n\nd %>% \n  ggplot(aes(x,y)) +\n  geom_line()\n```\n\n::: {.cell-output-display}\n![](gauss_files/figure-html/Kung-3-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n:::\n\n\n\n\n\n🤔 Das Modell geht apriori von ein paar Prozent Menschen mit *negativer* Größe aus. Ein Haufen Riesen 👹 werden auch erwartet. \n\n🤯   Vage (flache, informationslose, \"neutrale\", \"objektive\") Priori-Werte machen oft keinen Sinn, weil sie extreme, unplausible Werte zulassen.\n\n\n\n## Aufgaben\n\n- [stan_glm01](https://datenwerk.netlify.app/posts/stan_glm01/stan_glm01.html)\n- [ReThink4e1](https://datenwerk.netlify.app/posts/rethink4e1/rethink4e1)\n- [ReThink4e2](https://datenwerk.netlify.app/posts/rethink4e2/rethink4e2)\n- [ReThink4e3](https://datenwerk.netlify.app/posts/rethink4e3/rethink4e3)\n- [Kung-height](https://datenwerk.netlify.app/posts/kung-height/kung-height)\n- [Pupil-size](https://datenwerk.netlify.app/posts/pupil-size/pupil-size)\n- [IQ-Studentis](https://datenwerk.netlify.app/posts/iq-studentis/iq-studentis)\n- [Priori-Streuung](https://datenwerk.netlify.app/posts/priori-streuung/priori-streuung)\n- [Priorwahl1](https://datenwerk.netlify.app/posts/priorwahl1/priorwahl1)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}