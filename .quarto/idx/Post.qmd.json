{"title":"Die Post befragen","markdown":{"headingText":"Die Post befragen","containsRefs":false,"markdown":"\n\n\n\n![Bayes:Start!](img/Golem_hex.png){width=5%}\n\n\n\n\n## Lernsteuerung\n\n\n### Lernziele\n\nNach Absolvieren des jeweiligen Kapitels sollen folgende Lernziele erreicht sein.\n\nSie können ...\n\n\n- die Post-Verteilung anhand einer Stichprobenverteilung auslesen\n- Fragen nach Wahrscheinlichkeitsanteilen der Post-Verteilung anhand der Stichprobenverteilung beantworten\n- Fragen nach Quantilen anhand der Stichprobenverteilung beantworten\n\n### Benötigte R-Pakete\n\n\n\n```{r libs-hidden307}\n#| include: false\nlibrary(tidyverse)\n#library(gt)\n#library(patchwork)\nlibrary(easystats)\nlibrary(gt)\n\n```\n\n\n```{r}\n#| echo: false\ntheme_set(theme_modern())\n```\n\n\n\n```{r}\nlibrary(tidyverse)\n```\n\n\n### Begleitvideos\n\n\n- []()\n\n\n## Mit Stichproben die Post-Verteilung zusammenfassen\n\n\n### Zur Erinnerung: Gitterwerte in R berechnen\n\nBerechnen wir mit der Gittermethode (\"Bayes-Box\") die Postverteilung für den Globusversuch.\n\nDie Gittermethode ist ein Weg, die Posteriori-Verteilung zu berechnen. Die Posteriori-Verteilung birgt viele nützliche Informationen.\n\nModell: $W=6$ Wasser, $N=9$ Würfen und $k=10$ Gitterwerten,\nalso mit 10 Wasseranteilswerten zwischen 0 und 1. \n\nAbb. @fig-post1 zeigt die resultierende Post-Verteilung.\n\n\n```{r QM2-Thema2-kleineModelle-28}\nn <- 10\nn_success <- 6\nn_trials  <- 9\n\nd <-\n  tibble(p_grid = seq(from = 0, to = 1, length.out = n),\n         prior  = 1) %>% \n  mutate(likelihood = dbinom(n_success, \n                             size = n_trials, \n                             prob = p_grid)) %>% \n  mutate(unstand_post = (likelihood * prior),\n         post = unstand_post / sum(unstand_post))\n```\n\n\nVoilà, die Post-Verteilung als Tabelle, auch \"Bayes-Box\" (oder Bayes-Gitter) genannt: s. @tbl-post1.\n\n\n```{r QM2-Thema3-Teil1-1}\n#| echo: false\n#| tbl-cap: Postverteilung mit der Gittermethode berechnet\n#| label: tbl-post1\nd %>% \n  mutate_all(round, 2) %>% \n  gt::gt()\n```\n\n\n\n```{r plot-post-d}\n#| echo: false\n#| label: fig-post1\n#| fig-cap: Die Postverteilung für W=6, N=9, k=10\nd %>% \n  ggplot() +\n  aes(x = p_grid, y = post) +\n  geom_point(alpha = .5, size = 3) +\n  geom_line() +\n  scale_y_continuous(\"Posterior-Wahrscheinlichkeit\", \n                     breaks = NULL)\n```\n\n```{r QM2-Thema3-Post-befragen-2}\n#| echo: false\n#| eval: false\nd %>% \n  head() %>% \n  gt::gt() %>% \n  #fmt_number(columns = 3, decimals = 3) %>% \n  gt::fmt_scientific(columns = c(1,3, 4,5),\n             decimals = 0) %>% \n  gt::tab_header(gt::md(\"Tabelle *d* mit Daten zur Posteriori-Verteilung\"))\n\n```\n\n\nViele nützliche Fragen (und Antworten) leiten sich ab aus Abb. @fig-post1.\n\n\n### Beispiele für Fragen an die Post-Verteilung\n\n- Mit welcher Wahrscheinlichkeit liegt der Parameter unter einem bestimmten Wert?\n- Mit welcher Wahrscheinlichkeit liegt der Parameter zwischen zwei bestimmten Werten?\n- Mit 5% Wahrscheinlichkeit liegt der Parameterwert nicht unter welchem Wert?\n- Welcher Parameterwert hat die höchste Wahrscheinlichkeit?\n- Wie ungewiss ist das Modell über die Parameterwerte?\n\n\nSolche Fragen kann man in zwei Gruppen aufteilen:\n\n1. Fragen zu Parametern\n3. Fragen zu Wahrscheinlichkeiten\n\n\n### Bayes-Box für komplexe Modelle\n\nBisher, für einfache Fragestellungen hat unsere Bayes-Box, das heißt die Gittermethode bestens funktioniert: einfach, robust, formschön^[naja, nicht unbedingt formschön, aber mir fiel kein dritter Vorzug ein.].\nAllerdings: Funktioniert sie auch bei komplexeren Modellen?\nSchließlich wollen wir ja auch irgendwann Regressionsmodelle berechnen.\nAngenommen, wir haben ein Regressionsmodell mit 1 Prädiktor,\ndann haben wir folgende drei Größen^[Modellparameter genannt] zu schätzen: $\\beta_0, \\beta_1, \\sigma$.\nHört sich gar nicht so viel an. \nAber Moment, wir müssten dann z.B. die Frage beantworten, \nwie wahrscheinlich die Daten aposteriori sind,\nwenn z.B. $\\beta_0 = -3.14$ und $\\beta_1 = 2.71$ und $\\sigma = 0.70$.\nDemnach müssen wir alle Ausprägungen (\"Gitterwerte\") der Variablen multiplizieren.\nPuh, das wird eine große Zahl. \nWenn wir für die drei Größen jeweils 10 Ausprägungen annehmen, was wenig ist,\nkämen wir $10\\cdot10\\cdot10= 1000=10^3$ Kombinationen.\nBei 100 Ausprägungen wären es schon $100^3=10^6$ Kombinationen.\nDas wäre doch eine recht lange Tabelle.\n\nBei einer multiplen Regression mit sagen wir 10 Prädiktoren mit jeweils 100 Ausprägungen rechnet das arme R bis zum jüngsten Tag: $10^{100}.\nNein, das können wir R nicht zumuten.\nWir brauchen eine andere Lösung!\n\n\n### Wir arbeiten jetzt mit Häufigkeit, nicht mit Wahrscheinlichkeit\n\nKurz gesagt: Komplexere Bayes-Modelle können nicht mehr \"einfach mal eben\" ausgerechnet werden; die Mathematik wird so umfangreich bzw. zu komplex.\n\nGlücklicherweiße gibt es einen Trick, der die Sache nicht nur rechnerisch, sondern auch konzeptionell viel einfacher macht.\n\nDieser Trick lautet: Wir arbeiten nicht mehr mit Wahrscheinlichkeiten, sondern mit *Häufigkeiten.*\n\n\nPraktischerweise werden wir in Kürze einen R-Golem kennenlernen,\nder das für uns erledigt. \nDieser Golem liefert uns Stichproben aus der Post-Verteilung zurück.\n\nLernen wir jetzt also, wie man mit solchen Stichproben umgeht.\n\n\n:::callout-important\nDie Post-Verteilung in Stichprobenform ist viel einfach zu handhaben als das direkte Arbeiten mit Wahrscheinlichkeiten. Daher sind viele R-Funktionen für Bayes auf Stichproben eingestellt.\n:::\n\nDie Grid-Methode ist bei größeren Datensätzen (oder größeren Modellen) zu rechenintensiv.\nIn der Praxis werden daher andere, schnellere Verfahren verwendet, sog. Monte-Carlo-Markov-Ketten (MCMC).\nWie diese Verfahren funktionieren sind aber nicht mehr Gegenstand dieses Kurses.\nWir wenden Sie einfach an, freuen uns und lassen es damit gut sein[Eine gute Einführung in die Hintergründe findet sich bei @mcelreath_statistical_2020.]\n\n\n### Häufigkeiten sind einfacher als Wahrscheinlichkeiten\n\n\nWie gesagt, typische R-Werkzeuge (\"R-Golems\") liefern uns die Post-Verteilung in Stichprobenform zurück.\n\nBevor wir uns aber mit diesen R-Werkzeugen beschäftigen,\nsollten wir uns vertraut machen mit einer Post-Verteilung in Stichprobenform.\n\n\nErstellen wir uns also einen Tabelle mit Stichprobendaten aus der Posteriori-Verteilung (Tabelle `d`), s. @lst-post-sample.\n\n\n\n```{#lst-post-sample .r lst-cap=\"Wir stellen eine Tabelle mit Stichproben aus der Post-Verteilung\"}\nsamples <-\n  d %>%  # nimmt die Tabelle mit Posteriori-Daten,\n  slice_sample(  # Ziehe daraus eine Stichprobe,\n    n = 1e4,  # mit insgesamt n=10000 Zeilen,\n    weight_by = post,  # Gewichte nach Post-Wskt.,\n    replace = T)  %>%  # Ziehe mit Zurücklegen\n  select(p_grid)\n```\n\n\n\n```{r lst-post-sample2}\n#| lst-cap: Wir stellen eine Tabelle mit Stichproben aus der Post-Verteilung\n#| lst-label: lst-post-sample\n#| echo: false\nsamples <-\n  d %>%  # nimmt die Tabelle mit Posteriori-Daten,\n  slice_sample(  # Ziehe daraus eine Stichprobe,\n    n = 1e4,  # mit insgesamt n=10000 Zeilen,\n    weight_by = post,  # Gewichte nach Post-Wskt.,\n    replace = T)  %>%  # Ziehe mit Zurücklegen\n  select(p_grid)\n```\n\nDie Wahrscheinlichkeit, einen bestimmten Parameterwert (d.h. aus der Spalte `p_grid`) aus Tabelle `d` zu ziehen, \nist proportional zur Posteriori-Wahrscheinlichkeit (`post`) dieses Werts. \nZiehen mit Zurücklegen hält die Wahrscheinlichkeiten während des Ziehens konstant.\nDas Argument `weight_by` legt die Wahrscheinlichkeit fest, mit der eine Zeile gezogen wird.\n\nWir begnügen uns mit der Spalte mit den Wasseranteilswerten (Parameterwerten), `p_grid`, \ndie anderen Spalten brauchen wir nicht.\n\n\nDas Ergebnis, Tabelle `samples`, die aus Stichproben aus der Post-Verteilung besteht, ist (in Auszügen) in @tbl-postsample1 dargestellt.\n\n\n```{r QM2-Thema3-Post-befragen-4}\n#| echo: false\n#| label: tbl-postsample1\n#| tbl-cap: Die ersten Zeilen der Stichproben aus der Post-Verteilung\nsamples %>% \n  slice_head(n=5) %>% \n  gt() %>% \n  fmt_number(columns = c(1),\n             decimals = 3) \n```\n\n\nWenn Sie jetzt denken: \"Warum machen wir das jetzt? Brauchen wir doch gar nicht!\" - Dann haben Sie Recht.\nKünftig werden wir aber, wenn wir mit komplexeren Modellen zu tun haben, nur noch mit Post-Verteilungen auf Stichprobenbasis arbeiten, weil es damit viel einfacher ist.\n\n\n\n\n\n\nHier erstmal die ersten 100 gesampelten Gitterwerte (`p_grid`):\n\n```{r QM2-Thema3-Teil1-2}\n#| echo: false\nsamples$p_grid[1:100] %>% round(2)\n```\n\n\n\nWie sieht diese Tabelle wohl als Histogramm^[hier als Balkendiagramm, kommt fast aufs selbe raus, sieht aber etwas schöner aus in diesem Fall, da er nur wenige Balken sind] aus?\n\n\nSo sieht die Post-Verteilung auf Basis von Stichproben dann aus, s.  @fig-samples1.\n\n```{r QM2-Thema3-Teil1-3}\n#| echo: false\n#| message: false\n#| fig-cap: Stichprobenverteilung auf Basis von Stichproben\n#| label: fig-samples1\nsamples %>% \n  ggplot() +\n  aes(x = p_grid) +\n  geom_bar()\n```\n\nAus @fig-samples1 können wir einfach auslesen, wie wahrscheinlich gewisse Parameterwerte sind.\nSo sehen wir, dass das Modell Parameterwerte (Wasseranteil, $\\pi$) zwischen ca. 50% und 70% für am wahrscheinlichsten hält.\nAber auch kleine Anteile wie 25% sind nicht auszuschließen (auf Basis der Daten und der Modellannahmen).\n\nVergleichen Sie  @fig-samples1 mit @fig-gitter: beide sind sehr ähnlich!\nDas Stichprobenziehen (@fig-samples1) nähert sich recht gut an die exakte Berechnung an (@fig-gitter).\n\n\n### Visualisierung der Stichprobendaten mit $k=100$ Gitterwerten\n\n$k=10$ Gitterwerte ist ein grobes Raster.\nDrehen wir mal die Auflösung auf $k=100$ Gitterwerte (Ausprägungen) nach oben.\n\n\n\n\n```{r QM2-Thema2-kleineModelle-28a}\n#| echo: true\nk <- 100\nn_success <- 6\nn_trials  <- 9\n\nd_k100 <-\n  tibble(p_grid = seq(from = 0, \n                      to = 1, \n                      length.out = k),  # 100 Gitterwerte\n         prior  = 1) %>% \n  mutate(likelihood = dbinom(n_success, \n                             size = n_trials, \n                             prob = p_grid)) %>% \n  mutate(unstand_post = (likelihood * prior),\n         post = unstand_post / sum(unstand_post))\n```\n\n\n\n\n\n$d_k100$ ist eine Bayes-Box mit $W=6, N=9, k=100$.\n\nUnd daraus ziehen wir uns $n=1000$ Stichproben:\n\n\n```{r QM2-Thema3-Teil1-4}\nsamples_k100 <-\n  d_k100 %>%  # nimmt die Tabelle mit Posteriori-Daten,\n  slice_sample(  # Ziehe daraus eine Stichprobe,\n    n = 1000,  # mit insgesamt n=1000 Elementen,\n    weight_by = post,  # Gewichte nach Spalte mit Post-Wskt.,\n    replace = T)  # Ziehe mit Zurücklegen\n```\n\n\n@fig-post100 zeigt sowohl die exakte Post-Verteilung als auch die Post-Verteilung auf Basis von Stichproben. \nIm mittleren Teildiagramm sind die Stichproben einzeln als Kreis dargestellt.\nIm rechten Teildiagramm sind die gleichen Daten als Dichtediagramm dargestellt.\nIn allen Fällen erkennt man gut die zentrale Tendenz: ein Wasseranteil von 70% scheint der \"typische\" Wert des Modells zu sein.\nAußerdem erkennt man, dass das Modell durchaus einige Streuung in der Schätzung des Wasseranteils bereithält.\nDas Modell ist sich nicht sehr sicher, könnte man sagen.\n\n\n```{r samplesplot}\n#| echo: false\n#| fig-cap: Post-Verteilung mit 100 Gitterwerten, exakt vs. auf Basis von Stichproben\n#| label: fig-post100\n\n\np0 <- \n  d_k100 %>% \n  ggplot(aes(x = p_grid, y= post)) +\n  geom_line() +\n  geom_point() +\n  labs(title = \"Post-Verteilung exakt\")\n\np1 <-\n  samples_k100 %>% \n  mutate(sample_number = 1:n()) %>% \n  ggplot(aes(x = sample_number, y = p_grid)) +\n  geom_point(alpha = 1/10) +\n  scale_y_continuous(\"Anteil Wasser  (p)\", \n                     limits = c(0, 1)) +\n  labs(x = \"Nummer der Stichprobe\",\n       title = \"Stichproben aus der Post\")\n\np2 <-\nsamples_k100 %>% \n  ggplot(aes(x = p_grid)) +\n  geom_density(fill = \"black\") +\n  scale_x_continuous(\"Anteil Wasser (p)\", \n                     limits = c(0, 1)) +\n  labs(y = \"Wahrscheinlichkeitsdichte\",\n       title = \"Stichproben aus der Post\")\n\n\nplots(p0, p1, p2)\n```\n\nDie Stichprobendaten nähern sich der \"echten\" Posteriori-Verteilung an:\nDie Stichproben-Post-Verteilung hat jetzt \"glattere\" Ränder.\n\n\n::: callout-note\nMehr Stichproben und mehr Gitterwerte glätten die Verteilung.\n:::\n\nJetzt noch mal mit mehr Stichproben: $n=10^6$ Stichproben bei $k=100$ Gitterwerten aus der Posteriori-Verteilung, s. @fig-post-dk100.\n\n```{r QM2-Thema3-Post-befragen-5}\n#| echo: false\n#| label: fig-post-dk100\n#| fig-cap: \"Post-Verteilung mit vielen Stichproben und vielen Parameterwerten (Gitterwerten): schön 'glatt'. Mittelwert (MW), Modus und Median (Md) liegen eng nebeneinander, da die Verteilung recht symmetrisch ist.\"\n\n\nd_k100_samples <- \n  d_k100 %>% \n  slice_sample(n = 1e6, weight_by = post, replace = T) \n\n\nmode <- map_estimate(d_k100_samples$p_grid) %>% round(2)\navg <- mean(d_k100_samples$p_grid) %>% round(2)\nmd <- median(d_k100_samples$p_grid) %>% round(2)\n\nd_k100_samples %>%   \nggplot(aes(x = p_grid)) +\n  geom_density(fill = \"grey40\") +\n  scale_x_continuous(\"Anteil Wasser (p)\", limits = c(0, 1)) +\n  labs(y = \"\",\n       caption = paste0(\"Modus: \", mode, \"; MW: \", avg, \"; Md: \", md)) +\n  geom_vline(xintercept = c(mode, avg, md))\n```\n\n\n## Die Post-Verteilung befragen\n\n\n\nSo, jetzt befragen wir die Post-Verteilung.\n\n\n:::callout-important\nDie Post-Verteilung ist das zentrale Ergebnis einer Bayes-Analyse.\nWir können viele nützliche Fragen an sie stellen.\n:::\n\nEs gibt zwei Arten von Fragen:\n\n1. nach Wahrscheinlichkeiten (p)\n2. nach Parameterwerten (Quantilen, q)\n\n\nDer Unterschied zwischen beiden Arten von Fragen ist in  @fig-p-vs-q illustriert.\n\n![Fragen nach p vs. Fragen nach q](img/p-vs-q.png){#fig-p-vs-q width=\"50%\" fig-align=\"center\"}\n\nIm linken Teildiagramm von @fig-p-vs-q fragen wir: \"Wie wahrscheinlich ist ein Wasseranteil von höchstens 80%?\".\nIm rechten Teildiagramm fragen wir: \"Welcher Wasseranteil wird mit einer Wahrscheinlichkeit von 78% nicht überschritten?\".\n\n\n### Fragen nach Wahrscheinlichkeiten\n\n\n\n\nSagen wir, dass sei unsere Forschungsfrage: *Wie groß ist die Wahrscheinlichkeit, dass der Wasseranteil unter 50% liegt?*\n\n\nUm diese Frage zu beantworten, zählen wir einfach, wie viele Stichproben die Bedingung erfüllen:\n\nund und summieren die Wahrscheinlichkeiten dieser Stichproben:\n\n\n\n\n\nWir zählen (`count`) also die Stichproben, die sich für einen Wasseranteil (`p_grid`) von weniger als 50% aussprechen:\n\n```{r QM2-Thema3-Post-befragen-7}\nsamples %>%\n  count(p_grid < .5) \n```\n\nDa wir insgesamt 10000 (1e4) Stichproben gezogen haben, können wir noch durch diese Zahl teilen, um einen Anteil zu bekommen.\nDieser Anteil ist die Antwort auf die Forschungsfrage: \nWie Wahrscheinlichkeit (laut Modell) für einen Wasseranteil kleiner als 50%.^[Der Befehl `count` macht Folgendes: Er gruppiert die Stichprobe nach dem Prüfkriterium, Wasseranteil höchstens 50%. Dann zählt er in jeder der beiden Teiltabelle die Zeilen und liefert diese zwei Zahlen dann zurück. Man könnte also auch in etwa schreiben:\n\n```{r QM2-Thema3-Post-befragen-6}\nd %>%\n  filter(p_grid < .5) %>%\n  summarise(sum = sum(post))\n```\n\n\nEinfach wie `r emojifont::emoji(\"cake\")` essen.\n\n\n\n\n\n:::{#exm-param2}\n\n## Wasseranteil zwischen 50 und 75%?\n\nNoch eine Forschungsfrage: *Mit welcher Wahrscheinlichkeit liegt der Parameter (Wasseranteil) zwischen 0.5 und 0.75?*\n\n\n```{r QM2-Thema3-Post-befragen-8}\nsamples %>% \n  count(p_grid > .5 & p_grid < .75)\n```\n\n\n\n```{r QM2-Thema3-Post-befragen-8a}\nsamples %>% \n  count(p_grid > .5 & p_grid < .75) %>% \n  summarise(Anteil = n / 1e4,\n            Prozent = 100 * n / 1e4)  # In Prozent\n```\n\nAnteile von `count()` könnte man, wenn man möchte, auch `filter()` verwenden:\n\n\n```{r}\nsamples %>% \n  filter(p_grid > .5 & p_grid < .75) %>% \n  summarise(sum     =       n() / 1e4,\n            anteil = 100 * n() / 1e4)  # In Prozent\n```\n\n\n:::\n\n:::{#exm-param3}\n\n## Wasseranteil zwischen 90 und 100%?\n\nNoch ein Beispiel für eine Forschungsfrage: Mit welcher Wahrscheinlichkeit liegt der Parameter zwischen 0.9 und 1?\n\n```{r QM2-Thema3-Post-befragen-9}\nsamples %>% \n  count(p_grid >= .9 & p_grid <= 1) %>% \n  summarise(prop = 100 * n() / 1e4)  # prop wie \"proportion\", Anteil\n```\n\nLaut unserem Modell ist es also sehr unwahrscheinlich, dass der Wasseranteil der Erde mind.  90% beträgt.\n\n\n:::\n\n\nWir können auch fragen, welcher Parameterwert am wahrscheinlichsten ist;\ndieser Wert entspricht dem \"Gipfel\" des Berges, s.  @fig-post-dk100.\n\n\nFür unsere Stichproben-Postverteilung, `samples`, s. @fig-samples1, lässt sich der Modus so berechnen:\n\n\n```{r}\nmap_estimate(samples$p_grid)  \n```\n\n\nDabei steht `map` für [Maximum Aposteriori](https://easystats.github.io/bayestestR/reference/map_estimate.html), also das Maximum der Post-Verteilung.\n\n\nBei der Gelegenheit könnten wir folgende, ähnliche Fragen stellen:\n\n- Was ist der mittlere Schätzwert (Mittelwert) zum Wasseranteil laut Post-Verteilung?\n- Was ist der mediane Schätzwert (Median)?\n\n\nAuf Errisch:\n\n```{r}\nsamples %>% \n  summarise(mean(p_grid),\n            median(p_grid))\n```\n\n\n### Fragen nach Parameterwerten\n\n::: callout-important\nSchätzbereiche von Parameterwerten nennt man auch *Konfidenz- oder Vertrauensintervall*^[Tatsächlich gibt es eine Vielzahl an Begriffen, die in der Literatur nicht immer konsistent verwendet werden, etwa Kompatibilitätsintervall, Ungewissheitsintervall, Passungsbereich.].\n:::\n\n\n\nWelcher Parameterwert wird mit 90% Wahrscheinlichkeit nicht überschritten, laut unserem Modell? (Gesucht sind also die unteren 90% der Posteriori-Wahrscheinlichkeit)\nWir möchten also ziemlich sicher, was die Obergrenze an Wasser auf diesem Planeten ist^[Vielleicht damit es genug Berge zum Schifahren gibt.].\n\n\n```{r QM2-Thema3-Post-befragen-11}\nsamples %>% \n  summarise(quantil90 = quantile(p_grid, p = .9))\n```\n\n\nLaut unserem Modell können wir zu 90% sicher sein, dass der Wasseranteil kleiner ist als ca. 78%.\n\nEs hilft vielleicht, sich die Post-Verteilung noch einmal vor Augen zu führen, s. fig-post99.\n\n```{r}\n#| label: fig-post99\n#| fig-cap: Die Post-Verteilung im Globusversuch\n#| fig-asp: .5\n#| out-width: \"50%\"\nsamples %>% \n  ggplot(aes(x = p_grid)) +\n  geom_bar()\n```\n\n\n\n\nWas ist das *mittlere* Intervall, das mit 90% Wahrscheinlichkeit den Parameterwert enthält, laut dem Modell?\n\nDafür \"schneiden\" wir links und rechts die 5% der Stichproben mit den extremsten Werten ab und schauen, bei welchen Parameterwerten wir als Grenzwerte landen:\n\n```{r QM2-Thema3-Post-befragen-12, echo = TRUE}\nsamples %>% \n  summarise(\n    quant_05 = quantile(p_grid, 0.05),\n    quant_95 = quantile(p_grid, 0.95))\n\n```\n\n\nSolche Fragen lassen sich also mit Hilfe von *Quantilen* beantworten.\n\n\n\n### Zur Erinnerung: Quantile\n\nBeispiel: Wie groß sind die Studentis ([Quelle des Datensatzes](https://rdrr.io/cran/openintro/man/speed_gender_height.html))? \n\nDas Quantil von z.B. 25% zeigt die Körpergröße der 25% kleinsten Studentis an, analog für 50%, 75%, in Inches^[1 Inch entspricht 2.54cm]:\n\n```{r QM2-Thema3-Teil1-5}\n#| message: false\n#| echo: true\nspeed_gender_height <- read_csv(\"https://raw.githubusercontent.com/rpruim/OpenIntro/master/data/speed_gender_height.csv\")\n\nheight_summary <- \n  speed_gender_height %>% \n  mutate(height_cm = height*2.54) %>% \n  select(height_inch = height, height_cm) %>% \n  drop_na() %>% \n  pivot_longer(everything(), names_to = \"Einheit\", values_to = \"Messwert\") %>% \n  group_by(Einheit) %>% \n  summarise(q25 = quantile(Messwert, prob = .25),\n            q50 = quantile(Messwert, prob = .5),\n            q75 = quantile(Messwert, prob = .75))\n\nheight_summary\n```\n\nDas 25%-Quantil nennt man auch 1. Quartil; das 50%-Quantil (Median) auch 2. Quartil und das 75%-Quantil auch 3. Quartil.\n\n\n@fig-stud-height visualisiert die Quantile und die Häufigkeitsverteilung.\n\n```{r QM2-Thema3-Teil1-6}\n#| echo: false\n#| warning: false\n#| message: false\n#| fig-cap: Größenverteilung von 1325 amerikanischen Studentis\n#| label: fig-stud-height\n#| fig-width: 10\np1 <- speed_gender_height %>% \n  ggplot() +\n  aes(x = 1, y = height) +\n  geom_boxplot() +\n  labs(x = \"\",\n       y = \"Größe in Inch\",\n       title = \"Die Box zeigt das 25%-, 50%- und 75%-Quantil\")\n\nheight_summary_long <- \n  speed_gender_height %>% \n  select(height) %>% \n  drop_na() %>% \n  summarise(q25 = quantile(height, prob = .25),\n            q50 = quantile(height, prob = .5),\n            q75 = quantile(height, prob = .75)) %>% \n  pivot_longer(everything(),\n               names_to = \"q\",\n               values_to = \"height\")\n\np2 <- \n  speed_gender_height %>% \n  ggplot() +\n  aes(x = height) +\n  geom_histogram() +\n  geom_vline(data = height_summary_long,\n             aes(xintercept = height)) +\n  geom_text(data = height_summary_long,\n             aes(x = height+1,\n                 y = 0,\n                 label = paste0(q, \": \", height)),\n             angle = 90,\n            hjust = 0,\n            color = \"white\"\n             ) +\n  labs(title = \"Die vertikalen Striche zeigen die Quantile\",\n       y = \"Häufigkeit\")\n\nplots(p1, p2)\n```\n\n\n###  Den Quantilen unter die Motorhaube geschaut\n\nDen R-Befehl `quantile()` kann man sich, wenn man will, einfach nachbauen und entmystifizieren.\n\nAngenommen, wir wollen wissen, welcher Wasseranteil mit 90% Wahrscheinlichkeit nicht überschritten wird.\nDas können wir mit im Datensatz `samples` so erreichen.\n\n1. Sortiere die Stichproben aufsteigend.\n2. Schneide die oberen 10% ab.\n3. Schaue, was der größte verbleibende Wert ist.\n\n```{r}\nsamples %>% \n  arrange(p_grid) %>%   # sortiere\n  slice_head(n = 9000) %>%  # nur die ersten 90000, also die obersten 1000 abschneiden\n  summarise(p90 = max(p_grid))\n```\n\n\nDas (annähernd) gleiche Ergebnis liefert `quantile()`:\n\n```{r}\nsamples %>% \n  summarise(q90 = quantile(p_grid, .9))\n```\n\n\n### Visualisierung der Intervalle\n\nIntervalle (Bereiche), die die \"abzuschneidende\" Wahrscheinlichkeitsmasse hälftig auf die beiden Ränder aufteilen, nennen wir *Perzentilintervalle* oder *Equal-Tails-Intervalle* (ETI), s. Abb. @fig-eti, rechtes Teildiagramm.\n\n\n\n```{r piplot}\n#| echo: false\n#| fig-cap: Perzintilintervalle\n#| label: fig-eti\nq_80 <- quantile(samples$p_grid, prob = .8)\nq_10_and_90 <- quantile(samples$p_grid, prob = c(.1, .9))\n\np1 <-\n  d_k100 %>% \n  ggplot(aes(x = p_grid, y = post)) +\n  geom_line() +\n  labs(title=\"Untere 80%\",\n       caption = paste0(\"q80: \", round(q_80, 2))) +\n  geom_area(data = d_k100 %>% \n              filter(p_grid < q_80)) \n\n# lower right panel\np2 <-\n  d_k100 %>% \n  ggplot(aes(x = p_grid, y = post)) +\n  geom_line() +\n  geom_area(data = d_k100 %>% \n              filter(p_grid > q_10_and_90[1] & p_grid < q_10_and_90[2])) +\n  labs(subtitle = \"Perzentilintervall\",\n       title = \"Mittlere 80%\",\n       caption = paste0(\"q10: \", round(q_10_and_90[1], 2), \n                        \"; q90: \",\n                        round(q_10_and_90[2]), 2))\n\nplots(p1, p2)\n```\n\n\n\n## Schiefe Posteriori-Verteilungen sind möglich\n\n\nNoch einmal zum Globusversuch: Gehen wir von 3 Würfen mit 3 Treffern aus; auf welche Wasseranteile (Parameterwerte) werden wir jetzt schließen?\n\nVermutlich ziemlich hohe.\n\nErstellen wir uns dazu mal eine Post-Verteilung (3 Treffer, 3 Würfe):\n\n```{r QM2-Thema3-Post-befragen-13}\nd_33 <- \n  tibble(p_grid = seq(0,1, by =.01),\n         prior = 1) %>% \n  mutate(likelihood = dbinom(3, size = 3, prob = p_grid)) %>% \n  mutate(unstand_post = likelihood * prior) %>% \n  mutate(post_33  = unstand_post / sum(unstand_post)) \n\nsamples_33 <- \n  d_33 %>% \n    slice_sample(n = 1e4, \n                 weight_by = post_33, \n                 replace = T)\n```\n\nSo sehen die ersten paar Zeilen der Post-Verteilung, `samples_33`, aus.\n\n```{r QM2-Thema3-Post-befragen-14}\n#| echo: false\nsamples_33 %>% \n  select(-post_33) %>% \n  head() %>% \n  gt() %>% \n  fmt_number(columns = c(1,3,4), decimals = 2)\n```\n\n\nMit dieser \"schiefen\" Post-Verteilung können wir gut die Auswirkungen auf das Perzentil- und das Höchste-Dichte-Intervall anschauen.\n\n\n### 50%-Perzentil-Intervall\n\nHier z.B. ein 50%-Perzentilintervall, s. Abb. @fig-schief.\n\n\n\n```{r QM2-Thema3-Post-befragen-15}\n#| echo: false\n#| fig-cap: \"Schiefe Intervalle\"\n#| label: fig-schief\n\nqi_50_low <- eti(samples_33$p_grid, ci = .5)$CI_low\nqi_50_up <- eti(samples_33$p_grid, ci = .5)$CI_high\np1 <-\n  d_33 %>% \n  ggplot(aes(x = p_grid, y = post_33)) +\n  # check out our sweet `qi()` indexing\n  geom_area(data = . %>% \n              filter(p_grid > qi_50_low &  \n                    p_grid < qi_50_up),\n            fill = \"grey75\") +\n  geom_line() +\n  scale_x_continuous(breaks = seq(from = 0, to = 1, by = .1))\n\n\n\n\nhdi_50_low <- bayestestR::hdi(samples_33$p_grid, \n                                  ci = .5)$CI_low\nhdi_50_up <- bayestestR::hdi(samples_33$p_grid, \n                                  ci = .5)$CI_high\n\np2 <-\n  d_33 %>% \n  ggplot(aes(x = p_grid, y = post_33)) +\n  geom_area(data = . %>% \n              filter(p_grid > hdi_50_low & \n                     p_grid < hdi_50_up),\n            fill = \"grey75\") +\n  geom_line()\n\n\nplots(p1, \n      p2,\n      n_rows = 1,\n      title= c(\"Ein Perzentilintervall kann, wenn es dumm läuft, den wahrscheinlichsten Parameterwert nicht enthalten, diesen Wert also plausiblen Wert also zurückweisen. Das ist nicht so toll.\",\n        \"Ein Highest-Density-Intervall ist schmäler als der Perzintilintervall und enthält den wahrscheinlichsten Parameterwert\"))\n```\n\n\n\n\n\nDie Grenzwerte dieses ETI (oder jedes beliebig breiten) kann man sich z.B. so ausgeben lassen:\n\n```{r}\nlibrary(easystats)\n\nsamples_33 %>% \n  select(p_grid) %>% \n  eti(ci = .5)\n```\n\n\n\nDer wahrscheinlichste Parameterwert (1) ist *nicht* im Intervall enthalten.\nDas ist ein Nachteil der ETI.\n\n\n\n\n### 50%-Intervall höchster Dichte\n\nIntervalle höchster Dichte (Highest density Intervals, HDI oder HDPI) sind definiert als die *schmälsten* Intervalle, die den gesuchten Parameter enthalten.\n\n\n\n\n\nDer wahrscheinlichste Parameterwert (1) *ist* im Intervall enthalten, was Sinn macht.\nBei einem HDI sind die abgeschnitten Ränder nicht mehr gleich groß, im Sinne von enthalten nicht (zwangsläufig) die gleiche Wahrscheinlichkeitsmasse. \n\n\nJe symmetrischer die Verteilung, desto näher liegen die Punktschätzer aneinander (und umgekehrt), s. Abb. @fig-post-pointestimates.\n\n\n```{r pointestimators}\n#| echo: false\n#| fig-cap: Visualisierung der Punktschätzer bei einer schiefen Post-Verteilung\n#| label: fig-post-pointestimates\n#| message: false\n#| fig-asp: 0.5\n\npoint_estimates <-\n  bind_rows(samples_33 %>% tidybayes::mean_qi(p_grid),\n            samples_33 %>% tidybayes::median_qi(p_grid),\n            samples_33 %>% tidybayes::mode_qi(p_grid)) %>% \n  select(p_grid, .point) %>% \n  # these last two columns will help us annotate  \n  mutate(x = p_grid + c(-.03, .03, -.03),\n         y = c(.005, .012, .02))\n\nd_33 %>% \n  ggplot(aes(x = p_grid)) +\n  geom_area(aes(y = post_33),\n            fill = \"grey75\") +\n  geom_vline(xintercept = point_estimates$p_grid) +\n  geom_text(data = point_estimates,\n            aes(x = x, y = y, label = .point),\n            angle = 90) +\n  labs(x = \"Anteil Wasser (p)\",\n       y = \"Wahrscheinlichkeitsdichte\") +\n  theme(panel.grid = element_blank())\n```\n\n\n\n\nSo kann man sich die Grenzwerte eines 50%-HDI ausgeben lassen:\n\n\n```{r hdi-samples-50}\nsamples %>% \n  select(p_grid) %>% \n  bayestestR::hdi(ci = .5)  # aus dem Paket `bayestestR`\n```\n\nDas Modell ist sich also zu 50% sicher, dass der gesuchte Parameter (der Wasseranteil der Erdoberfläche) sich in diesem Bereich befindet (auf Basis eines HDI).\n\n\n:::callout-note\nDas R-Paket `{bayestestR}` ist Teil des Meta-Pakets `{easystats}`.\nEs reicht, wenn Sie `easystats` laden, damit wird `bayestestR` automatisch geladen.\n:::\n\n\n## Fazit\n\n\n### Intervalle höchster Dichte vs. Perzentilintervalle\n\n- Bei symmetrischer Posteriori-Verteilung sind beide Intervalle ähnlich\n- Perzentilintervalle sind verbreiteter\n- *Intervalle höchster Dichte* (Highest Density Interval, HDI) sind bei schiefen Post-Verteilungen zu bevorzugen\n- Intervalle höchster Dichte sind die *schmalsten* Intervalle für eine gegebene Wahrscheinlichkeitsmasse\n\n\n\n\n### Zusammenfassung\n\nFassen wir zentrale Punkte an einem Beispiel zusammen.\n\nIm Globusversuch, Datendatz `samples`, s. @lst-post-sample. Sagen wir, wir haben 6 Treffer bei 9 Würfen erzielt.\n\n\n\n\nLageparmameter: Welchen mittleren Wasseranteil muss man annehmen?\n\n```{r QM2-Thema3-Post-befragen-19}\nsamples %>% \n  summarise(\n    mean   = mean(p_grid),\n    median = median(p_grid))  \n```\n\nStreuungsparameter: Wie unsicher sind wir in der Schätzung des Wasseranteils?\n\n```{r QM2-Thema3-Post-befragen-20}\nsamples %>% \n  summarise(\n    p_sd   = sd(p_grid),\n    p_iqr = IQR(p_grid),\n    p_mad = mad(p_grid))  \n```\n\nAnstelle der Streuungsparameter ist es aber üblicher, ein HDI oder PI anzugeben.\n\n\n\n:::callout-important\nAlles Wasser oder was?\nIm Beispiel dieses Kapitels haben wir unser gefragt, was wohl der Wasseranteil auf dem Planeten Erde ist. \nHalten Sie sich klar vor Augen: Der Wasseranteil ist ein Beispiel für einen *Parameter*, einer unbekannten Größes eines Modells.\n:::\n\n\n\n\n\n## Aufgaben\n\n\n1. [iq01](https://datenwerk.netlify.app/posts/iq01/iq01.html)\n2. [iq02](https://datenwerk.netlify.app/posts/iq02/iq02.html)\n3. [iq03](https://datenwerk.netlify.app/posts/iq03/iq03.html)\n4. [iq04](https://datenwerk.netlify.app/posts/iq04/iq04.html)\n5. [iq05](https://datenwerk.netlify.app/posts/iq05/iq05.html)\n6. [iq06](https://datenwerk.netlify.app/posts/iq06/iq06.html)\n7. [iq07](https://datenwerk.netlify.app/posts/iq07/iq07.html)\n8. [iq08](https://datenwerk.netlify.app/posts/iq08/iq08.html)\n8. [iq10](https://datenwerk.netlify.app/posts/iq10/iq10.html)\n9. [fattails1](https://datenwerk.netlify.app/posts/fattails01/fattails01.html)\n10. [fattails2](https://datenwerk.netlify.app/posts/fattails02/fattails02.html)\n11. [ReThink3e1-7](https://datenwerk.netlify.app/posts/rethink3e1-7/rethink3e1-7)\n\n\n\n\n\n\n\n\n\n\n\n\n\n## ---\n\n\n\n![](img/outro-06.jpg){width=100%}\n\n\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"kable","error":false,"eval":true,"cache":null,"freeze":"auto","echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-yaml":false,"keep-source":false,"keep-hidden":false,"prefer-html":true,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"number-sections":true,"output-file":"Post.html"},"language":{},"metadata":{"lang":"de","fig-responsive":true,"quarto-version":"1.1.168","bibliography":["references.bib"],"editor":"source","knitr":{"opts_chunk":{"collapse":true,"R.options":{"knitr.graphics.auto_pdf":true}}},"theme":"cosmo"},"extensions":{"book":{"multiFile":true}}},"pdf":{"execute":{"fig-width":5.5,"fig-height":3.5,"fig-format":"pdf","fig-dpi":300,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":"auto","echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":true,"keep-yaml":false,"keep-source":false,"keep-hidden":false,"prefer-html":true,"output-divs":true,"output-ext":"pdf","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":true,"merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"pdf-engine":"xelatex","standalone":true,"variables":{"graphics":true,"tables":true},"default-image-extension":"pdf","to":"pdf","toc":true,"number-sections":true,"output-file":"Post.pdf"},"language":{},"metadata":{"block-headings":true,"lang":"de","bibliography":["references.bib"],"editor":"source","knitr":{"opts_chunk":{"collapse":true,"R.options":{"knitr.graphics.auto_pdf":true}}},"colorlinks":true,"papersize":"a4"},"extensions":{"book":{}}}}}