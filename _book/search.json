[
  {
    "objectID": "0800-gauss.html",
    "href": "0800-gauss.html",
    "title": "7  Gauss-Modelle",
    "section": "",
    "text": "7.1 Lernsteuerung",
    "crumbs": [
      "Lineare Modelle",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Gauss-Modelle</span>"
    ]
  },
  {
    "objectID": "0800-gauss.html#lernsteuerung",
    "href": "0800-gauss.html#lernsteuerung",
    "title": "7  Gauss-Modelle",
    "section": "",
    "text": "7.1.1 Position im Modulverlauf\nAbbildung 1.1 gibt einen Überblick zum aktuellen Standort im Modulverlauf.\n\n\n7.1.2 Lernziele\nNach Absolvieren des jeweiligen Kapitels sollen folgende Lernziele erreicht sein.\nSie können …\n\nein Gaußmodell spezifizieren und in R berechnen\nan Beispielen verdeutlichen, wie sich eine vage bzw. eine informationsreiche Priori-Verteilung auf die Posteriori-Verteilung auswirkt\n\n\n\n7.1.3 Begleitliteratur\nDer Stoff dieses Kapitels orientiert sich an McElreath (2020), Kap. 4.1 bis 4.3.\n\n\n7.1.4 Vorbereitung im Eigenstudium\n\nStatistik1, Kap. “Modellgüte”\nStatistik1, Kap. “Punktmodelle 2”\n\n\n\n7.1.5 Benötigte R-Pakete\nFür rstanarm wird ggf. weitere Software benötigt.\n\n\n\n\n\n\nHinweis\n\n\n\nSoftware, und das sind R-Pakete, müssen Sie nur einmalig installieren. Aber bei jedem Start von R bzw. RStudio müssen Sie die (benötigten!) Pakete starten.\n\n\n\nlibrary(tidyverse)  # Datenjudo\nlibrary(rstanarm)  # Bayes-Modelle berechnen\nlibrary(easystats)  # Statistik-Komfort\nlibrary(DataExplorer)  # Daten verbildlichen\nlibrary(ggpubr)  # Daten verbildlichen\nlibrary(hexbin)  # stat_bin_hex ggplot2\n\n\n\n\n\n\n\nWichtig\n\n\n\nAb diesem Kapitel benötigen Sie das R-Paket rstanarm. \\(\\square\\)\n\n\n\n\n7.1.6 Benötigte Daten\nWir benötigen den Datensatz !Kung. Quelle der Daten ist McElreath (2020) mit Bezug auf Howell.\n\nKung_path &lt;-  \n  \"https://raw.githubusercontent.com/sebastiansauer/Lehre/main/data/Howell1a.csv\"  \n\nd &lt;- read.csv(Kung_path) \n\nhead(d)\n\n\n  \n\n\n\nDatenquelle\n Download \n\n\n7.1.7 Einstieg\n\nBeispiel 7.1 (Was war noch mal eine Normalverteilung?) In diesem Kapitel benötigen Sie ein gutes Verständnis der Normalverteilung (die auch als Gauss-Verteilung bezeichnet wird). Fassen Sie daher die wesentlichen Aspekte der Normalverteilung (soweit im Unterricht behandelt) zusammen! \\(\\square\\)\n\n\nBeispiel 7.2 (Was war noch mal eine Posterior-Verteilung?) In diesem Kapitel befragen wir die Post-Verteilung für ein normalverteilte Zufallsvariable, nämlich die Körpergröße der !Kung San. Was war noch mal eine Post-Verteilung und wozu ist sie gut? \\(\\square\\)",
    "crumbs": [
      "Lineare Modelle",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Gauss-Modelle</span>"
    ]
  },
  {
    "objectID": "0800-gauss.html#wie-groß-sind-die-kung-san",
    "href": "0800-gauss.html#wie-groß-sind-die-kung-san",
    "title": "7  Gauss-Modelle",
    "section": "7.2 Wie groß sind die !Kung San?",
    "text": "7.2 Wie groß sind die !Kung San?\nDieser Abschnitt basiert slee auf McElreath (2020), Kap. 4.3.\n\n7.2.1 !Kung San\nIn diesem Abschnitt untersuchen wir eine Forschungsfrage in Zusammenhang mit dem Volk der !Kung, s. Abbildung 7.1.\n\nThe ǃKung are one of the San peoples who live mostly on the western edge of the Kalahari desert, Ovamboland (northern Namibia and southern Angola), and Botswana.The names ǃKung (ǃXun) and Ju are variant words for ‘people’, preferred by different ǃKung groups. This band level society used traditional methods of hunting and gathering for subsistence up until the 1970s. Today, the great majority of ǃKung people live in the villages of Bantu pastoralists and European ranchers.\n\nQuelle\n\n\n\n\n\n\n\n\n\n\n\n(a) Kung People\n\n\n\n\n\n\n\n\n\n\n\n(b) Verbreitung der Kung-Sprachen\n\n\n\n\n\n\n\nAbbildung 7.1: Die !Kung im südlichen Afrika\n\n\n\nQuelle\nQuelle: By Andrewwik.0 - Own work, CC BY-SA 4.0,]\nWir interessieren uns für die Größe der erwachsenen !Kung, also filtern wir die Daten entsprechend und speichern die neue Tabelle als d2.\n\nd2 &lt;- d %&gt;% \n  filter(age &gt;= 18)\n\nnrow(d2)\n## [1] 352\n\n\\(N=352\\).\nLassen wir uns einige typische deskriptive Statistiken zum Datensatz ausgeben. {easystats} macht das tatsächlich recht easy, s. Tabelle 7.1.\n\ndescribe_distribution(d2)\n\n\n\n\n\nTabelle 7.1: Statistiken der metrischen Variablen im Kung-Datensatz\n\n\n\n\n\n\n\n\n\nVariable\nMean\nSD\nIQR\nMin\nMax\nSkewness\nKurtosis\nn\nn_Missing\n\n\n\n\nheight\n154.60\n7.74\n12.06\n136.53\n179.07\n0.15\n−0.48\n352.00\n0\n\n\nweight\n44.99\n6.46\n9.19\n31.07\n62.99\n0.13\n−0.51\n352.00\n0\n\n\nage\n41.14\n15.97\n23.00\n18.00\n88.00\n0.67\n−0.21\n352.00\n0\n\n\nmale\n0.47\n0.50\n1.00\n0.00\n1.00\n0.13\n−2.00\n352.00\n0\n\n\n\n\n\n\n\n\n\n\nDie Verteilungen lassen sich mit plot_density (aus {DataExplorer}), s. Abbildung 7.2.\n\nplot_density(d2)\n\n\n\n\n\n\n\nAbbildung 7.2: Verteilungen der Variablen im Kung-Datensatz. Größe und Gewicht sind recht symmetrisch; Alter ist rechtsschief.\n\n\n\n\n\n\n\n7.2.2 Wir gehen apriori von normalverteilter Größe Der !Kung aus\nForschungsfrage: Wie groß sind die erwachsenen !Kung im Durchschnitt?\nWir interessieren uns also für den Mittelwert der Körpergröße (erwachsener Kung beider Geschlechter), \\(\\mu\\).\n\n\n\nMensch\n\n\nQuelle1\nWir sind uns über diesen Mittelwert nicht sicher2, und unsere Ungewissheit quantifizieren wir anhand einer Normalverteilung mit Mittelwert von 178cm und Streuung von 20 cm:\n\\[\\mu \\sim \\mathcal{N}(178, 20) \\tag{7.1}\\]\nGleichung 7.1 definiert ein Modell: Unsere Vorstellung der mittleren (“typischen”) Körpergröße der erwachsenen !Kung.\nWarum 178 cm? Kein besonderer Grund. Hier wollen wir den Effekt verschiedener Priori-Werte untersuchen.3 In einer echten Untersuchung sollte man immer einen inhaltlichen Grund für einen Priori-Wert haben. Oder man wählt “schwach informative” Prioris, wie das {rstanarm} tut: Damit lässt man kaum Vorab-Information in das Modell einfließen, aber man verhindert extreme Prioris, die meistens unsinnig sind (so wie eine SD von 100 Metern in diesem Fall).\n\n\n\n\n\n\nHinweis\n\n\n\nWir haben zwar vorab nicht viel Wissen, aber auch nicht gar keines: Eine Gleichverteilung der Körpergrößen kommt nicht in Frage und ein vages Wissen zum Mittelwert haben wir auch. Darüber hinaus ist eine Normalverteilung nicht unplausibel.",
    "crumbs": [
      "Lineare Modelle",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Gauss-Modelle</span>"
    ]
  },
  {
    "objectID": "0800-gauss.html#die-exponentialverteilung",
    "href": "0800-gauss.html#die-exponentialverteilung",
    "title": "7  Gauss-Modelle",
    "section": "7.3 Die Exponentialverteilung",
    "text": "7.3 Die Exponentialverteilung\n\n7.3.1 Die Apfel-fällt-nicht-weit-vom-Stamm-Verteilung\nDarf ich vorstellen …\nBevor wir unser Kung-Modell spezifizieren können, sollten wir noch überlegen, welches Vorab-Wissen wir zur Streuung um den Mittelwert herum haben. Da wir uns nicht 100% sicher zur gesuchten Größe sind, müssen wir angeben, wie groß die Streuung um den Mittelwert sein soll. Hier werden wir eingestehen, dass wir uns auch nicht 100% sicher sind, wie groß die Streuung exakt ist. Also geben wir eine Verteilung für die Streuung an.\nEtwas Wissen über diese Verteilung haben wir:\n\nEine Streuung muss positiv sein (es gibt keine negative Streuung).\nEine Gleichverteilung der Streuung ist vielleicht möglich, aber nicht sehr plausibel.\nWenn wir der Meinung sind, der Mittelwert betrage “ungefähr 178cm”, so halten wir 180cm für plausibel, aber 18000 cm für unmöglich und schon 200 für sehr unplausibel. Also: Je größer die die Abweichung vom Mittelwert desto unplausibler.\n\nDiese Anforderungen4 spiegeln sich in Abbildung 7.3 wider; es handelt sich um eine Exponentialveteilung. Außerdem zeigt die Abbildung verschiedene Quantile, wie das 95%-Quantil, das bei 3 liegt; 95% der Werte dieser Verteilung sind also nicht größer als 3.\n\n\n\n\n\n\n\n\nAbbildung 7.3: Die Exponentialverteilung mit einigen ihrer Quantilen\n\n\n\n\n\nFür eine exponentialverteilte Variable \\(X\\) schreibt man auch:\n\\[X \\sim \\operatorname{Exp}(1)\\]\nEine Verteilung dieser Form nennt man Exponentialverteilung.\n\nEine Exponentialverteilung ist nur für positive Werte, \\(x&gt;0\\), definiert.\nSteigt X um eine Einheit, so ändert sich Y um einen konstanten Faktor.\nSie hat nur einen Parameter, genannt Rate oder \\(\\lambda\\) (“lambda”).\n\\(\\frac{1}{\\lambda}\\) gibt gleichzeitig Mittelwert und Streuung (“Gestrecktheit”) der Verteilung an.\nJe größer die Rate \\(\\lambda\\), desto kleiner die Streuung und der Mittelwert der Verteilung.\nJe größer \\(1/\\lambda\\), desto größer die Streuung und der Mittelwert der Verteilung.\n\nOhne auf die mathematischen Eigenschaften im Detail einzugehen, halten wir fest, dass der Graph dieser Funktion gut zu unseren Plänen passt.\n\n\n7.3.2 Visualisierung verschiedener Exponentialverteilungen\nSchauen wir uns einige Beispiele von Exponentialverteilungen an. Unterschiede in Exponentialverteilungen sind rein auf Unterschiede in \\(\\lambda\\) (lambda) zurückzuführen, s. Abbildung 7.4.\n\n\n\n\n\n\n\n\nAbbildung 7.4: Beispiele von Expnentialverteilungen mit unterschiedlichem lambda\n\n\n\n\n\nWie wir in Abbildung 7.4 sehen, könnte eine Exponentialverteilung mit \\(\\lambda=1/8\\) grob passen.\n\n\n\n\n\n\nHinweis\n\n\n\nDie “richtigen” Priori-Verteilung zu finden, bzw. die richtigen Parameter für die Priori-Verteilung zu wählen, ist nicht möglichn, denn es gibt nicht die eine, richtige Priori-Verteilung. Eine “gut passende” Verteilung zu finden, ist häufig nicht leicht. Gut beraten ist man mit der Regel, im Zweifel lieber eine liberale Verteilung zu wählen, die einen breiteren Raum an möglichen Werten zulässt. Allerdings sollte man nicht das Baby mit dem Wasser auskippen und extreme Werte, wie mehrere Meter Körpergröße Streuung, erlauben.\n\n\nMan kann sich die Quantile der Exponentialverteilung mit qexp ausgeben lassen, wobei mit man p den Wert der Verteilungsfunktion angibt, für den man das Quantil haben möchte. Mit rate wird \\(\\lambda\\) (lambda) bezeichnet.\nDieser Aufruf zum Beispiel:\n\nqexp(p = .5, rate = 1/8)\n## [1] 5.545177\n\nGibt uns die Verteilungsfunktion einer Exponentialverteilung mit Rate (\\(\\lambda\\)) von 1/8 zurück, ca. 5.5.\nDie Grenzen der inneren 95% dieser Verteilung kann man sich so ausgeben lassen:\n\nqexp(p = c(0.025, .975), rate = 1/8)\n## [1]  0.2025425 29.5110356\n\nDiese Grenzen scheinen hinreichend weit, das wir noch von den Daten überrascht werden können, aber schmal genug, um unsinnige Werte auszuschließen. Ein guter Start! Weiter geht’s!",
    "crumbs": [
      "Lineare Modelle",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Gauss-Modelle</span>"
    ]
  },
  {
    "objectID": "0800-gauss.html#unser-gauss-modell-der-kung",
    "href": "0800-gauss.html#unser-gauss-modell-der-kung",
    "title": "7  Gauss-Modelle",
    "section": "7.4 Unser Gauss-Modell der !Kung",
    "text": "7.4 Unser Gauss-Modell der !Kung\n📺 Teil 1\n\n7.4.1 Modelldefinition\nWir nehmen an, dass \\(\\mu\\) und \\(h_i\\) normalverteilt sind und \\(\\sigma\\) exponentialverteilt (da notwendig positiv) ist:\nLikelihood: \\(h_i \\sim \\mathcal{N}(\\mu, \\sigma)\\)\nPrior für den Parameter \\(\\mu\\): \\(\\mu \\sim \\mathcal{N}(178, 20)\\)\nPrior für den Parameter \\(\\sigma\\): \\(\\sigma \\sim \\mathcal{E}(0, 0.1)\\)\nDaher: \\(95\\%KI( \\mu): 178 \\pm 40\\)\nIn Abbildung 7.5 sind unsere Priori-Verteilungen visualisiert.\n\n\n\n\n\n\n\n\nAbbildung 7.5: Unser (erstes) Kung-Modell (m41)\n\n\n\n\n\n\n\n\n\n\n\nHinweis\n\n\n\nDieses Modell hat zwei Parameter, \\(\\mu\\) und \\(\\sigma\\). \\(\\square\\)\n\n\n\n\n7.4.2 Priori gewichtet mit Likelihood ergibt Posteriori\nZu Erinnerung: Die Posteriori-Wahrscheinlichkeit ist das Ergebnis von Priori-Wahrscheinlichkeit und Likelihood.\nDie Körpergrößen der einzelnen Personen \\(h_i\\) nehmen wir als normalverteilt an mit Mittelwert \\(\\mu\\) und Streuung \\(\\sigma\\):\n\\[h_i \\sim \\mathcal{N}(\\color{blue}{\\mu},\\color{green}{\\sigma})\\]\n\n\n7.4.3 Prioris der Parameter\nDer Mittelwert der Körpergröße sei normalverteilt mit \\(\\mu=178\\) und \\(\\sigma=20\\):\n\\[\\color{blue}{\\mu \\sim \\mathcal{N}(178, 20)}\\]\nDie Streuung \\(\\sigma\\) der Größen sei exponentialverteil mit \\(\\lambda = 1/8\\).\n\\[\\color{green}{\\sigma \\sim \\mathcal{E}(1/8)}\\]\n\n\n7.4.4 Fertig!\nJetzt haben wir unser Modell (m41) definiert!\nWeil es so schön ist, schreiben/zeichnen wir es hier noch einmal auf, Gleichung 7.2, Abbildung 7.6.\n\n\n\\[\n\\begin{aligned}\nh_i &\\sim \\mathcal{N}(\\mu, \\sigma) \\\\\n\\mu &\\sim \\mathcal{N}(178, 20) \\\\\n\\sigma &\\sim \\mathcal{E}(1/8)\n\\end{aligned}\n\\tag{7.2}\\]\n\n\n\n\n\n\n\nAbbildung 7.6: Modellschema für das Modell m41\n\n\n\n\n\nZur Berechnung von m41 nutzen wir jetzt dieses Mal aber nicht die Gittermethode (Bayes-Box), sondern lassen R die Arbeit verrichten.\nDa gibt es einen neuen Golem, ziemlich kräftig der Bursche, der soll die Arbeit für uns tun. Der Golem hört auf den Namen rstanarm5.",
    "crumbs": [
      "Lineare Modelle",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Gauss-Modelle</span>"
    ]
  },
  {
    "objectID": "0800-gauss.html#zufällige-motivationsseite",
    "href": "0800-gauss.html#zufällige-motivationsseite",
    "title": "7  Gauss-Modelle",
    "section": "7.5 Zufällige Motivationsseite",
    "text": "7.5 Zufällige Motivationsseite\n\n\n\nGut gemacht!",
    "crumbs": [
      "Lineare Modelle",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Gauss-Modelle</span>"
    ]
  },
  {
    "objectID": "0800-gauss.html#posteriori-verteilung-des-größen-modells-m41",
    "href": "0800-gauss.html#posteriori-verteilung-des-größen-modells-m41",
    "title": "7  Gauss-Modelle",
    "section": "7.6 Posteriori-Verteilung des Größen-Modells, m41",
    "text": "7.6 Posteriori-Verteilung des Größen-Modells, m41\nOkay, Golem, an die Arbeit! Berechne uns das Kung-Modell! Nennen wir das Modell m416.\n\n1m41 &lt;- stan_glm(height ~ 1, data = d2, refresh = 0)\n2m41_post &lt;- as_tibble(m41)\n3names(m41_post) &lt;- c(\"mu\", \"sigma\")\n\n\n1\n\nBayes-Regressionsmodell berechnen\n\n2\n\nModellergebnis in Tabelle umwandeln\n\n3\n\nSchönere Namen für die Spalten geben\n\n\n\n\nDas Argument refresh = 0 verhindert, dass die Details zum Ziehen der Stichproben am Bildschirm ausgegeben werden. Ich finde diese Ausgabe meist nicht informativ, so dass ich sie lieber unterdrücke. stan_glm7 ist eine Funktion, mit der man Regressionsmodelle berechnen kann. Nun haben wir in diesem Fall kein “richtiges” Regressionsmodell. Man könnte sagen, wir haben eine AV (Körpergröße), aber keine UV (keine Prädiktoren). Glücklicherweise können wir auch solche “armen” Regressionsmodelle formulieren: av ~ 1 bzw. in unserem Beispiel height ~ 1 bedeutet, dass man nur die Verteilung der AV berechnen möchte, aber keine Prädiktoren hat (das soll die 1 symbolisieren). Für das Modell m41 haben wir keine Prioris spezifiziert. Wir greifen damit auf die Voreinstellung (defaults) der Prioris von rstanarm zurück. Das ist ok, aber wenn Sie Vorab-Wissen haben, sollten Sie das an rstanarm weitergeben, weil es ja schade wäre, wenn Sie Wissen haben, das von Ihrem Modell nicht genutzt wird.\nPlotten wir mal die gemeinsame Posteriori-Verteilung von m41, s. Abbildung 7.7\n\nFliesendiagrammStreudiagrammHistogramm\n\n\nGemeinsame Post-Verteilung von Mittelwert und Streuung\n\nm41_post %&gt;% \n  ggplot() +\n  aes(x = mu, y = sigma) %&gt;% \n  geom_hex() +\n  scale_fill_viridis_c() \n\n\n\n\n\n\n\nAbbildung 7.7: Die gemeinsame Post-Verteilung von Mittelwert und Streuung von m42\n\n\n\n\n\nDa das Modell zwei Parameter hat, können wir auch beide gleichzeitig plotten. Wie man sieht, sind die beiden Parameter unkorreliert. In anderen Modellen können die Parameter korreliert sein.\nAbbildung 7.7 erlaubt uns, für jede Kombination von Mittelwert und Streuung zu fragen, wie wahrscheinlich diese bestimmte Kombination ist.\n\n\nHier sind noch zwei andere Visualisierungen der Post-Verteilung von m42, s. Abbildung 7.8.\n\n\n\n\n\n\n\n\nAbbildung 7.8: Die Postverteilung in unterschiedlicher Darstellung\n\n\n\n\n\n\n\nUnd hier kommt die Post-Verteilung nur des Mittelwerts.\nNatürlich können wir auch nur von einem einzelnen Parameter (z. B. Mittelwert) die Verteilung untersuchen, s. Abbildung 7.9.\n\n\n\n\n\n\n\n\nAbbildung 7.9: Die Post-Verteilung von mu in m42; ein Balkendiagramm bietet sich an.\n\n\n\n\n\n\n\n\nFassen wir die Ergebnisse dieses Modells zusammen:\n\nWir bekommen eine Wahrscheinlichkeitsverteilung für \\(\\mu\\) und eine für \\(\\sigma\\) (bzw. eine zweidimensionale Verteilung, für die \\(\\mu,\\sigma\\)-Paare).\nTrotz des eher vagen Priors ist die Streuung Posteriori-Werte für \\(\\mu\\) und \\(\\sigma\\) klein: Die große Stichprobe hat die Priori-Werte überstimmt.\nZiehen wir Stichproben aus der Posteriori-Verteilung, so können wir interessante Fragen stellen.\n\n\n7.6.1 Hallo, Posteriori-Verteilung\n… wir hätten da mal ein paar Fragen an Sie. 🕵\n\nMit welcher Wahrscheinlichkeit ist die mittlere !Kung-Person größer als 1,55m?\nWelche mittlere Körpergröße wird mit 95% Wahrscheinlichkeit nicht überschritten, laut dem Modell?\nIn welchem 90%-PI liegt \\(\\mu\\) vermutlich?\nMit welcher Unsicherheit ist die Schätzung der mittleren Körpergröße behaftet?\nWas ist der mediane Schätzwert der mittleren Körpergröße, sozusagen der “Best Guess”?\n\nAntworten folgen etwas weiter unten.\nAbschließend, eigentlich nur Spielerei, noch eine andere Visualisierung der Post-Verteilung von \\(\\mu\\) und von \\(\\sigma\\), Abbildung 7.10.\n\n\n\n\n\n\n\n\nAbbildung 7.10: Die beiden Randverteilungen der Post-Verteilungen, d.h. die Verteilungen für mu und für sigma\n\n\n\n\n\n\n\n7.6.2 Posteriori-Stichproben mit stan_glm() berechnen\nMit stan_glm() können wir komfortabel die Posteriori-Verteilung berechnen. Die Gittermethode wird nicht verwendet, aber die Ergebnisse sind - in bestimmten Situationen - ähnlich. Es werden aber auch viele Stichproben simuliert (sog. MCMC-Methode). Gibt man keine Priori-Werte an, so greift die Funktion auf Standardwerte zurück.\nGrob gesagt berechnen wir die Post-Verteilung mit stan_glm so:\n\nlibrary(rstanarm)  # Paket muss gestartet sein.\n\n# berechnet Post.-Vert.:\nstan_glm(\n  # modelldefinition:\n  AV ~ UV,\n  # Datensatz:\n  data = meine_daten\n)\n\nModelldefinition:\n\\(h_i \\sim \\mathcal{N}(\\mu, \\sigma)\\), Likelihood\n\\(\\mu \\sim \\mathcal{N}(155, 19)\\), Prior zum Größenmittelwert\n\\(\\sigma \\sim \\mathcal{E}(0.125)\\), Prior zur Streuung der Größen\n\n\n7.6.3 Ausgabe von stan_glm()\nWir können, wie wir es oben getan haben, uns die Stichproben der Post-Verteilung ausgeben lassen, und diese z. B. plotten.\nWir können es aber auch komfortabler haben … Mit dem Befehl parameters kann man sich die geschätzten Parameterwerte einfach ausgeben lassen.\n\nm41 &lt;- stan_glm(height ~ 1, data = d2, refresh = 0)  # aus Paket rstanarm\n\nparameters(m41)  # aus Paket `easystats`\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nParameter\nMedian\n95% CI\npd\nRhat\nESS\nPrior\n\n\n\n\n(Intercept)\n154.59\n(153.80, 155.40)\n100%\n1.000\n2930.00\nNormal (154.60 +- 19.36)\n\n\n\n\n\nDas Wesentliche: Unser Golem schätzt den Größenmittelwert der Kung auf ca. 155cm bzw. auf einen Bereich von etwa 153.7988561 bis 155.3988336 schätzt. Informativ ist vielleicht noch, dass wir den Prior erfahren, der im Modell verwendet wurde. Dazu später mehr.\n\n\n\n\n\n\nHinweis\n\n\n\nIn dieser Ausgabe sind ein paar Angaben, die wir nicht verstehen, wie pd, Rhat und ESS. Kein Problem: Einfach ignorieren 🤓 Wer Näheres wissen will, findet hier einen Anfang. Außerdem sei an McElreath (2020) und Gelman, Hill, und Vehtari (2021) verwiesen. \\(\\square\\)",
    "crumbs": [
      "Lineare Modelle",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Gauss-Modelle</span>"
    ]
  },
  {
    "objectID": "0800-gauss.html#wie-tickt-stan_glm",
    "href": "0800-gauss.html#wie-tickt-stan_glm",
    "title": "7  Gauss-Modelle",
    "section": "7.7 Wie tickt stan_glm()?",
    "text": "7.7 Wie tickt stan_glm()?\n\n\n\n\n\n\n Quelle\n\nHier ein paar Kerninfos zu stan_glm:\n\nStan ist eine Software zur Berechnung von Bayesmodellen; das Paket rstanarm stellt Stan für uns bereit.\nstan_glm() ist für die Berechnung von Regressionsmodellen ausgelegt.\nWill man nur die Verteilung einer Variablen (wie heights) schätzen, so hat man man … eine Regression ohne Prädiktor.\nEine Regression ohne Prädiktor schreibt man auf Errisch so: y ~ 1. Die 1 steht also für die nicht vorhandene UV; y meint die AV (height).\n(Intercept) (Achsenabschnitt) gibt den Mittelwert an.\n\n\n\nMehr findet sich in der Dokumentation von RstanArm.\n\n7.7.1 Schätzwerte zu den Modellparameter\nDie Parameter eines Modells sind die Größen, für die wir eine Priori-Verteilung annehmen. Außerdem wählen wir einen einen Likelihood-Funktion, so dass wir die Likelihood berechnen können. Auf dieser Basis schätzen wir dann die Post-Verteilung. Ich sage schätzen, um hervorzuheben, dass wir die wahren Werte nicht kennen, sondern nur eine Vermutung haben, unsere Ungewissheit vorab also (wie immer) in der Priori-Verteilung festnageln und unsere Ungewissheit nach Kenntnis der Daten in der Posteriori-Verteilung quantifizieren. Wie gerade gesehen, lassen sich die Modellparameter (bzw. genauer gesagt deren Schätzungen) einfach mit parameters(modellname) auslesen.\n\n\n7.7.2 Stichproben aus der Posteriori-Verteilung ziehen\nWie wir es vom Globusversuch gewohnt sind, können wir aber auch Stichproben aus der Post-Verteilung ziehen.\nHier die ersten paar Zeilen von post_m41:\n\npost_m41 &lt;- as_tibble(m41)\nhead(post_m41)\n\n\n  \n\n\n\nIn einer Regression ohne Prädiktoren entspricht der Achsenabschnitt dem Mittelwert der AV, daher gibt uns die Spalte (Intercept) Aufschluss über unsere Schätzwerte zu \\(\\mu\\) (der Körpergröße).\n\nÜbungsaufgabe 7.1 (Mit welcher Wahrscheinlichkeit ist \\(\\mu&gt;155\\)?)  \n\n\n\n\n\n\nLösung\n\n\n\n\n\n\n\nnames(post_m41) &lt;- \n  c(\"mu\", \"sigma\")  # den Namen \"(Intercept)\" durch \"mu\" ersetzen, ist prägnanter\n\npost_m41 %&gt;% \n  count(mu &gt; 155) %&gt;% \n  mutate(prop = n/sum(n))\n\n\n  \n\n\n\nDie Wahrscheinlichkeit ist nicht hoch, aber nicht auszuschließen, dass die Kung im Schnitt größer als 155 cm sind. Wahrscheinlicher ist jedoch, dass sie kleiner als 155 cm sind. \\(\\square\\)\n\n\n\n\n\nÜbungsaufgabe 7.2 (Mit welcher Wahrscheinlichkeit ist \\(\\mu&gt;165\\)?)  \n\n\n\n\n\n\nLösung\n\n\n\n\n\n\nnames(post_m41) &lt;- \n  c(\"mu\", \"sigma\")  # den Namen \"(Intercept)\" durch \"mu\" ersetzen, ist prägnanter\n\npost_m41 %&gt;% \n  count(mu &gt; 165) %&gt;% \n  mutate(prop = n/sum(n))\n\n\n  \n\n\n\nOh, diese Hypothese können wir mit an Sicherheit grenzender Wahrscheinlichkeit ausschließen. Aber Achtung: Das war eine Kleine-Welt-Aussage! Die Wahrscheinlichkeit, die Hypothese \\(\\mu &gt; 165\\) auszuschließen ist nur dann hoch, wenn das Modell gilt! Wenn also der Golem keinen Mist gebaut hat. Und sind wir mal ehrlich, der Golem tut, was sein:e Herr:in und Meister:in ihm befiehlt. Letztlich liegt es an uns, den Golem auf Spur zu kriegen.\n\n\n\n\n\nBeispiel 7.3 (Welche mittlere Körpergröße wird mit 95% Wahrscheinlichkeit nicht überschritten, laut dem Modell m41?)  \n\n\n\n\n\n\nLösung\n\n\n\n\n\n\npost_m41 %&gt;% \n  summarise(q95 = quantile(mu, .95))\n\n\n  \n\n\n\n\n\n\n\n\nÜbungsaufgabe 7.3 (In welchem 90%-PI liegt \\(\\mu\\) vermutlich?)  \n\n\n\n\n\n\nLösung\n\n\n\n\n\n\npost_m41 %&gt;% \n  eti()\n\n\n  \n\n\n\nEin ETI ist synonym zu PI.\n\n\n\n\n\nÜbungsaufgabe 7.4 (Mit welcher Unsicherheit ist die Schätzung der mittleren Körpergröße behaftet?)  \n\n\n\n\n\n\nLösung\n\n\n\n\n\n\nm41 %&gt;% \n  parameters()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nParameter\nMedian\n95% CI\npd\nRhat\nESS\nPrior\n\n\n\n\n(Intercept)\n154.59\n(153.80, 155.40)\n100%\n1.000\n2930.00\nNormal (154.60 +- 19.36)\n\n\n\n\n\nSeeing is believing, s. Abbildung 7.11.\n\nm41 %&gt;% \n  parameters() %&gt;% \n  plot(show_intercept = TRUE)\n\n\n\n\n\n\n\nAbbildung 7.11: Parameter von m41, nur einer: der Intercept\n\n\n\n\n\nDas Modell ist sich recht sicher: die Ungewissheit der mittleren Körpergröße liegt bei nicht viel mehr als einem Zentimeter (95%-CI).\n\n\n\n\n\nÜbungsaufgabe 7.5 (Was ist der mediane Schätzwert der mittleren Körpergröße, sozusagen der “Best Guess”?)  \n\n\n\n\n\n\nLösung\n\n\n\n\n\nparameters(m41) hat uns die Antwort schon gegeben: Ca. 155 cm.\n\n\n\n\n🏋️ Ähnliche Fragen bleiben als Übung für die Lesis. 🤓\n\n\n7.7.3 Standard-Prioriwerte bei stan_glm()\nstan_glm() nimmt für uns Priori-Wert an. Welche das sind, kann man sich so anzeigen lassen:\n\nprior_summary(m41)\n## Priors for model 'm41' \n## ------\n## Intercept (after predictors centered)\n##   Specified prior:\n##     ~ normal(location = 155, scale = 2.5)\n##   Adjusted prior:\n##     ~ normal(location = 155, scale = 19)\n## \n## Auxiliary (sigma)\n##   Specified prior:\n##     ~ exponential(rate = 1)\n##   Adjusted prior:\n##     ~ exponential(rate = 0.13)\n## ------\n## See help('prior_summary.stanreg') for more details\n\nstan_glm() verwendet (in der Voreinstellung) schwach informative Priori-Werte, die nur wenig Vorabwissen in das Modell geben. Es werden dafür die Stichproben-Daten als Priori-Daten verwendet: Mittelwerte und Streuungen der AV werden als Grundlage für die Priori-Verteilungen herangezogen. Strenggenommen ist das nicht “pures Bayes”, weil die Priori-Werte ja vorab, also vor Kenntnis der Daten bestimmt werden sollen. Bitte reichen Sie Ihre Beschwerden bei Andrew Gelman ein.\nMan sollte diese Standardwerte als Minimalvorschlag sehen. Kennt man sich im Sachgebiet aus, kann man meist bessere Prioris finden. Die Voreinstellung ist nicht zwingend; andere Werte wären auch denkbar.\n\n\n\n\n\n\nStandardwerte von stan_glm\n\n\n\n\nIntercept: \\(\\mu\\), der Mittelwert der Verteilung \\(Y\\)\n\n\\(\\mu \\sim \\mathcal{N}(\\bar{Y}, sd(Y)\\cdot 2.5)\\)\nals Streuung von \\(\\mu\\) wird die 2.5-fache Streuung der Stichprobe (für \\(Y\\)) angenommen.\n\nAuxiliary (sigma): \\(\\sigma\\), die Streuung der Verteilung \\(Y\\)\n\n\\(\\sigma \\sim \\mathcal{E}(\\lambda=1/sd(Y))\\)\nals “Streuung”, d.h. \\(\\lambda\\) von \\(h_i\\) wird \\(\\frac{1}{sd(Y)}\\) angenommen. \\(\\square\\)\n\n\n\n\nEine sinnvolle Strategie ist, einen Prior so zu wählen, dass man nicht übergewiss ist, also nicht zu sicher Dinge behauptet, die dann vielleicht doch passieren (also die Ungewissheit zu gering spezifiziert), andererseits sollte man extreme, unplausible Werte ausschließen.\n\n\n\n\n\n\nWichtig\n\n\n\nBei der Wahl der Prioris gibt es nicht die eine, richtige Wahl. Die beste Entscheidung ist auf transparente Art den Stand der Forschung einfließen zu lassen und eigene Entscheidungen zu begründen. Häufig sind mehrere Entscheidungen möglich. Möchte man lieber vorsichtig sein, weil man wenig über den Gegenstand weiß, dann könnte man z. B. auf die Voreinstellung von rstanarm vertrauen, die “schwachinformativ” ist, also nur wenig Priori-Information in das Modell einfließen lässt.\n\n\n\n\n7.7.4 Wenn es schnell gehen muss\nstan_glm() ist deutlich langsamer als z. B. der befreundete Golem lm(). Der Grund für Stans Langsamkeit ist, dass er viele Stichproben zieht, also viel zu zählen hat. Außerdem wiederholt er das Stichprobenziehen (im Standard) 4 Mal, damit sein Meister prüfen kann, ob er (Stan) die Arbeit auch immer richtig gemacht hat. Die Idee dabei ist, wenn alle vier Durchführungen (auch “Ketten” engl., chains) genannt, zum etwa gleichen Ergebnis kommen, dann wird schon alles mit rechten Dingen zugegangen sein. Weichen die Ergebnisse der 4 Ketten voneinander ab, so ist Stan ein Fehler unterlaufen, oder, irgendetwas ist “dumm gelaufen”. An dieser Stelle schauen wir uns die Ketten nicht näher an, aber es sei notiert, dass man die Anzahl der Ketten mit dem Argument chains steuern kann. Möchte man, dass Stan sich beeilt, so kann man chains = 1 setzen, das spart Zeit.\n\nm41a &lt;- stan_glm(height ~ 1, \n                 data = d2, \n                 chains = 1,  # nur 1 Kette, anstelle von 4 im Default, spart Zeit\n                 refresh = 0) \n\nparameters(m41a)",
    "crumbs": [
      "Lineare Modelle",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Gauss-Modelle</span>"
    ]
  },
  {
    "objectID": "0800-gauss.html#modell-m42-unsere-priori-werte",
    "href": "0800-gauss.html#modell-m42-unsere-priori-werte",
    "title": "7  Gauss-Modelle",
    "section": "7.8 Modell m42: unsere Priori-Werte",
    "text": "7.8 Modell m42: unsere Priori-Werte\n📺 Teil 2\nIm Modell m41 haben wir auf die Priori-Werte der Voreinstellung von rstanarm vertraut. Jetzt lassen wir mal unsere eigenen Priori-Werte einfließen, in unserem zweiten Kung-Modell, m42.\n\n7.8.1 m42\nDann lassen wir stan_glm() (Stan) unser zweites Modell berechnen.8 Dieses Mal geben wir die Priori-Werte explizit an, Tabelle 7.2.\n\nm42 &lt;- \n  stan_glm(height ~ 1, \n           prior_intercept = normal(178, 20),  # mu\n           prior_aux = exponential(0.125),  # sigma\n           refresh = FALSE,  # bitte nicht so viel Ausgabe drucken\n           data = d2)\nparameters(m42)\n\n\n\n\n\nTabelle 7.2: Parameter von m42 mit eigenen Prioriwerten\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nParameter\nMedian\n95% CI\npd\nRhat\nESS\nPrior\n\n\n\n\n(Intercept)\n154.62\n(153.83, 155.42)\n100%\n1.000\n2482.00\nNormal (178 +- 20)\n\n\n\n\n\n\n\n\nWir haben noch nicht alle Informationen kennengelernt, die in Tabelle 7.2 ausgegeben werden. Im Zweifel: Einfach ignorieren. Wichtige Fähigkeit im Studium. 🤓\n\n\n\n\n\n\nWichtig\n\n\n\nVergleichen Sie die Parameterwerte von m41 und m42! Was fällt Ihnen auf? Nichts? Gut! Tatsächlich liefern beide Modelle sehr ähnliche Parameterwerte. Die Prioriwerte waren nicht so wichtig, weil wir genug Daten haben. Hat man einigermaßen viele Daten, so fallen Prioriwerte nicht mehr ins Gewicht, zumindest wenn sie moderat gewählt waren.\n\n\n\n\n7.8.2 Posteriori-Verteilung und Parameter plotten\nLeider liefert der Stan-Golem leider keinen braven Tibble (Tabelle) zurück.\n\n👨‍🏫 Böser Golem!\n\n\n🤖 Beim nächsten Mal strenge ich mich mehr an!\n\nDaher müssen wir die Ausgabe des Stan-Golemns erst in eine schöne Tabelle umwandeln:\n\nm42_tibble &lt;-\n  as_tibble(m42)\n\nhead(m42_tibble)\n\n\n  \n\n\n\nAußerdem ist der Name der ersten Spalte eigentlich unzulässig, da Spaltennamen in R nicht mit Sonderzeichen anfangen dürfen (sondern mit Buchstaben). Daher müssen wir den Namen mit “Samthandschuhen” anpacken. Auf Errisch sind das die Backticks, die wir um den Namen rumwickeln müssen, s. die folgende Syntax.\n\nMit {ggpubr}Mit {ggplot}\n\n\n\nm42_tibble |&gt; \n  gghistogram(x = \"`(Intercept)`\")  # Aus dem Paket \"ggpubr\"\n\n\n\n\n\n\n\n\n\n\n\nm42_tibble |&gt; \n  ggplot(aes(x = `(Intercept)`)) +  # Aus dem Paket `ggplot2`\n  geom_histogram()\n\n\n\n\n\n\n\n\n\n\n\nAls Ausblick: Ein Vergleich mehrerer Priori-Werte wäre auch nützlich, um ein skeptisches Publikum von der Wahl (bzw. der Indifferenz) der gewählten Priori-Werte zu überzeugen.",
    "crumbs": [
      "Lineare Modelle",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Gauss-Modelle</span>"
    ]
  },
  {
    "objectID": "0800-gauss.html#fazit",
    "href": "0800-gauss.html#fazit",
    "title": "7  Gauss-Modelle",
    "section": "7.9 Fazit",
    "text": "7.9 Fazit\n\n7.9.1 Zusammenfassung\nWir haben die Posteriori-Verteilung für ein Gauss-Modell berechnet. Dabei hatten wir ein einfaches Modell mit metrischer Zielvariablen, ohne Prädiktoren, betrachtet. Die Zielvariable, Körpergröße (height), haben wir als normalverteilt mit den Parametern \\(\\mu\\) und \\(\\sigma\\) angenommen. Für \\(\\mu\\) und \\(\\sigma\\) haben wir jeweils keinen einzelnen (fixen) Wert angenommen, sondern eine Wahrscheinlichkeitsverteilung, der mit der Priori-Verteilung für \\(\\mu\\) bzw. \\(\\sigma\\) festgelegt ist.\n\n\n7.9.2 Botschaft von einem Statistiker\n\n\n\n🧡 Bleiben Sie dran!\n\n\n\n\n\n\n\n\nWichtig\n\n\n\nKontinuierliches Lernen ist der Schlüssel zum Erfolg.",
    "crumbs": [
      "Lineare Modelle",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Gauss-Modelle</span>"
    ]
  },
  {
    "objectID": "0800-gauss.html#wahl-der-priori-werte",
    "href": "0800-gauss.html#wahl-der-priori-werte",
    "title": "7  Gauss-Modelle",
    "section": "7.10 Wahl der Priori-Werte",
    "text": "7.10 Wahl der Priori-Werte\n🏎️ Dieser Abschnitt ist eine VERTIEFUNG und nicht prüfungsrelevant. 🏎\n\n7.10.1 Welche Beobachtungen sind auf Basis unseres Modells zu erwarten?\n\nn &lt;- 1e4\n\nsim &lt;- tibble(sample_mu  = \n      rnorm(n, \n            mean = 178, \n            sd   = 20),\n    sample_sigma = \n      rexp(n, \n            rate = 0.1)) %&gt;% \n  mutate(height  = \n      rnorm(n, \n            mean = sample_mu, \n            sd   = sample_sigma))\n\nheight_sim_sd &lt;- \n  sd(sim$height) %&gt;% round()\nheight_sim_mean &lt;- \n  mean(sim$height) %&gt;% round()\n\n💭 Was denkt der Golem (m41) apriori von der Größe der !Kung?\n🦾 Ziehen wir mal ein paar Stichproben auf Basis des Modells. Voilà:\n\np3 &lt;- \n  sim %&gt;% \n  ggplot(aes(x = height)) +\n  geom_density(fill = \"grey33\") +\n  scale_x_continuous(breaks = c(0, 178-3*height_sim_sd, 178, 178+3*height_sim_sd)) +\n  scale_y_continuous(NULL, breaks = NULL) +\n  labs(title = \"height ~ dnorm(mu, sigma)\",\n       caption = \"X-Achse zeigt MW±3SD\",\n       x = \"Größe\") +\n  theme(panel.grid = element_blank()) \n\np3\n\n\n\n\n\n\n\n\nQuellcode\n\n\n7.10.2 Priori-Werte prüfen mit der Priori-Prädiktiv-Verteilung\n\nDie Priori-Prädiktiv-Verteilung (sim) simuliert Beobachtungen (nur) auf Basis der Priori-Annahmen: \\(h_i \\sim \\mathcal{N}(\\mu, \\sigma),\\) \\(\\mu \\sim \\mathcal{N}(178, 20),\\) \\(\\sigma \\sim \\mathcal{E}(0.1)\\)\nSo können wir prüfen, ob die Priori-Werte vernünftig sind.\n\nDie Priori-Prädiktiv-Verteilung zeigt, dass unsere Priori-Werte ziemlich vage sind, also einen zu breiten Bereich an Größenwerten zulassen:\n\np3\n\n\n\n\n\n\n\n\nAnteil \\(h_i &gt; 200\\):\n\nanteil_großer_kung &lt;- \nsim %&gt;% \n  count( height &gt; 200) %&gt;% \n  mutate(prop = n/sum(n))\nanteil_großer_kung\n\n\n  \n\n\n\n🤔 Sehr große Buschleute? 17 Prozent sind größer als 2 Meter. Das ist diskutabel, muss aber nicht zwangsläufig ein schlechter Prior sein.\n\n\n7.10.3 Vorhersagen der Priori-Werte\n\n\n\n\n\n\n\n\n\n\n\n7.10.4 Extrem vage Priori-Verteilung für die Streuung?\n\\[\\sigma \\sim \\mathcal{E}(\\lambda=0.01)\\]\n\n\n\n\n\n\n\n\n\nDie Streuung der Größen ist weit:\n\nd &lt;- \n  tibble(x = seq(0,75, by =.01),\n         y = dexp(x, rate = .01))\n\nd %&gt;% \n  ggplot(aes(x,y)) +\n  geom_line()\n\n\n\n\n\n\n\n\n🤔 Das Modell geht apriori von ein paar Prozent Menschen mit negativer Größe aus. Ein Haufen Riesen 👹 werden auch erwartet.\n🤯 Vage (flache, informationslose, “neutrale”, “objektive”) Priori-Werte machen oft keinen Sinn, weil sie extreme, unplausible Werte zulassen.",
    "crumbs": [
      "Lineare Modelle",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Gauss-Modelle</span>"
    ]
  },
  {
    "objectID": "0800-gauss.html#aufgaben",
    "href": "0800-gauss.html#aufgaben",
    "title": "7  Gauss-Modelle",
    "section": "7.11 Aufgaben",
    "text": "7.11 Aufgaben\n\nstan_glm01\nReThink4e1\nReThink4e2\nReThink4e3\nKung-height\nPupil-size\nIQ-Studentis\nPriori-Streuung\nPriorwahl1\nRethink4e2",
    "crumbs": [
      "Lineare Modelle",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Gauss-Modelle</span>"
    ]
  },
  {
    "objectID": "0800-gauss.html#section",
    "href": "0800-gauss.html#section",
    "title": "7  Gauss-Modelle",
    "section": "7.12 —",
    "text": "7.12 —\n\n\n\n\n\nGelman, Andrew, Jennifer Hill, und Aki Vehtari. 2021. Regression and Other Stories. Analytical Methods for Social Research. Cambridge: Cambridge University Press.\n\n\nMcElreath, Richard. 2020. Statistical Rethinking: A Bayesian Course with Examples in R and Stan. 2. Aufl. CRC Texts in Statistical Science. Boca Raton: Taylor and Francis, CRC Press.",
    "crumbs": [
      "Lineare Modelle",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Gauss-Modelle</span>"
    ]
  },
  {
    "objectID": "0800-gauss.html#footnotes",
    "href": "0800-gauss.html#footnotes",
    "title": "7  Gauss-Modelle",
    "section": "",
    "text": "Bildquelle: Own alterations andFile:SVG_Human_With_All_Organs.svg by Madhero88, CC BY-SA, via Wikimedia Commons 3.0↩︎\nDarum machen wir hier ja die ganz Show!↩︎\nDer Autor des zugrundeliegenden Fachbuchs, Richard McElreath gibt 178cm als seine Körpergröße an.↩︎\n“Desiderata”↩︎\nHey, ich habe ihn diesen Namen nicht gegeben.↩︎\nm wie Modell und 4, weil das Modell in Kapitel 4 von McElreath (2020) in ähnlicher Form berichtet wird, und 1 weil es unsere erste Variante dieses Modells ist.↩︎\naus dem R-Paket rstanam, das zuvor installiert und gestartet sein muss, bevor Sie den Befehl nutzen können↩︎\nHey Stan, los, an die Arbeit!↩︎",
    "crumbs": [
      "Lineare Modelle",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Gauss-Modelle</span>"
    ]
  }
]